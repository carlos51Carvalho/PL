Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGIN
    END
    ENDVARS
    FUNCTION
    VARS
    else
    if
    int
    print
    read
    repeat
    str
    until
    while

Grammar

Rule 0     S' -> Main
Rule 1     Main -> Condicao
Rule 2     Condicao -> ( Condicaobase )
Rule 3     Condicaobase -> Cond
Rule 4     Condicaobase -> LCondd OperLogico Cond
Rule 5     LCondd -> Condicaobase
Rule 6     Cond -> ( Condicaobase )
Rule 7     Cond -> ! ( Condicaobase )
Rule 8     Cond -> Exp Oper Exp
Rule 9     Cond -> ! Exp
Rule 10    Cond -> Exp
Rule 11    OperLogico -> & &
Rule 12    OperLogico -> | |
Rule 13    Oper -> = =
Rule 14    Oper -> ! =
Rule 15    Oper -> >
Rule 16    Oper -> <
Rule 17    Oper -> > =
Rule 18    Oper -> < =
Rule 19    Exp -> Exp + Termo
Rule 20    Exp -> Exp - Termo
Rule 21    Exp -> Termo
Rule 22    Termo -> Termo * Fator
Rule 23    Termo -> Termo / Fator
Rule 24    Termo -> Termo % Fator
Rule 25    Termo -> Fator
Rule 26    Fator -> ( Exp )
Rule 27    Fator -> num
Rule 28    Fator -> id
Rule 29    Fator -> id [ Exp ]

Terminals, with rules where they appear

!                    : 7 9 14
%                    : 24
&                    : 11 11
(                    : 2 6 7 26
)                    : 2 6 7 26
*                    : 22
+                    : 19
-                    : 20
/                    : 23
<                    : 16 18
=                    : 13 13 14 17 18
>                    : 15 17
BEGIN                : 
END                  : 
ENDVARS              : 
FUNCTION             : 
VARS                 : 
[                    : 29
]                    : 29
else                 : 
error                : 
id                   : 28 29
if                   : 
int                  : 
num                  : 27
print                : 
read                 : 
repeat               : 
str                  : 
until                : 
while                : 
|                    : 12 12

Nonterminals, with rules where they appear

Cond                 : 3 4
Condicao             : 1
Condicaobase         : 2 5 6 7
Exp                  : 8 8 9 10 19 20 26 29
Fator                : 22 23 24 25
LCondd               : 4
Main                 : 0
Oper                 : 8
OperLogico           : 4
Termo                : 19 20 21 22 23 24

Parsing method: LALR

state 0

    (0) S' -> . Main
    (1) Main -> . Condicao
    (2) Condicao -> . ( Condicaobase )

    (               shift and go to state 3

    Main                           shift and go to state 1
    Condicao                       shift and go to state 2

state 1

    (0) S' -> Main .



state 2

    (1) Main -> Condicao .

    $end            reduce using rule 1 (Main -> Condicao .)


state 3

    (2) Condicao -> ( . Condicaobase )
    (3) Condicaobase -> . Cond
    (4) Condicaobase -> . LCondd OperLogico Cond
    (6) Cond -> . ( Condicaobase )
    (7) Cond -> . ! ( Condicaobase )
    (8) Cond -> . Exp Oper Exp
    (9) Cond -> . ! Exp
    (10) Cond -> . Exp
    (5) LCondd -> . Condicaobase
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 4
    !               shift and go to state 8
    num             shift and go to state 12
    id              shift and go to state 13

    Condicaobase                   shift and go to state 5
    Cond                           shift and go to state 6
    LCondd                         shift and go to state 7
    Exp                            shift and go to state 9
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 4

    (6) Cond -> ( . Condicaobase )
    (26) Fator -> ( . Exp )
    (3) Condicaobase -> . Cond
    (4) Condicaobase -> . LCondd OperLogico Cond
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (6) Cond -> . ( Condicaobase )
    (7) Cond -> . ! ( Condicaobase )
    (8) Cond -> . Exp Oper Exp
    (9) Cond -> . ! Exp
    (10) Cond -> . Exp
    (5) LCondd -> . Condicaobase
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 4
    !               shift and go to state 8
    num             shift and go to state 12
    id              shift and go to state 13

    Condicaobase                   shift and go to state 14
    Exp                            shift and go to state 15
    Cond                           shift and go to state 6
    LCondd                         shift and go to state 7
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 5

    (2) Condicao -> ( Condicaobase . )
    (5) LCondd -> Condicaobase .

    )               shift and go to state 16
    &               reduce using rule 5 (LCondd -> Condicaobase .)
    |               reduce using rule 5 (LCondd -> Condicaobase .)


state 6

    (3) Condicaobase -> Cond .

    )               reduce using rule 3 (Condicaobase -> Cond .)
    &               reduce using rule 3 (Condicaobase -> Cond .)
    |               reduce using rule 3 (Condicaobase -> Cond .)


state 7

    (4) Condicaobase -> LCondd . OperLogico Cond
    (11) OperLogico -> . & &
    (12) OperLogico -> . | |

    &               shift and go to state 18
    |               shift and go to state 19

    OperLogico                     shift and go to state 17

state 8

    (7) Cond -> ! . ( Condicaobase )
    (9) Cond -> ! . Exp
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 20
    num             shift and go to state 12
    id              shift and go to state 13

    Exp                            shift and go to state 21
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 9

    (8) Cond -> Exp . Oper Exp
    (10) Cond -> Exp .
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo
    (13) Oper -> . = =
    (14) Oper -> . ! =
    (15) Oper -> . >
    (16) Oper -> . <
    (17) Oper -> . > =
    (18) Oper -> . < =

    )               reduce using rule 10 (Cond -> Exp .)
    &               reduce using rule 10 (Cond -> Exp .)
    |               reduce using rule 10 (Cond -> Exp .)
    +               shift and go to state 23
    -               shift and go to state 24
    =               shift and go to state 25
    !               shift and go to state 26
    >               shift and go to state 27
    <               shift and go to state 28

    Oper                           shift and go to state 22

state 10

    (21) Exp -> Termo .
    (22) Termo -> Termo . * Fator
    (23) Termo -> Termo . / Fator
    (24) Termo -> Termo . % Fator

    +               reduce using rule 21 (Exp -> Termo .)
    -               reduce using rule 21 (Exp -> Termo .)
    =               reduce using rule 21 (Exp -> Termo .)
    !               reduce using rule 21 (Exp -> Termo .)
    >               reduce using rule 21 (Exp -> Termo .)
    <               reduce using rule 21 (Exp -> Termo .)
    )               reduce using rule 21 (Exp -> Termo .)
    &               reduce using rule 21 (Exp -> Termo .)
    |               reduce using rule 21 (Exp -> Termo .)
    ]               reduce using rule 21 (Exp -> Termo .)
    *               shift and go to state 29
    /               shift and go to state 30
    %               shift and go to state 31


state 11

    (25) Termo -> Fator .

    *               reduce using rule 25 (Termo -> Fator .)
    /               reduce using rule 25 (Termo -> Fator .)
    %               reduce using rule 25 (Termo -> Fator .)
    +               reduce using rule 25 (Termo -> Fator .)
    -               reduce using rule 25 (Termo -> Fator .)
    =               reduce using rule 25 (Termo -> Fator .)
    !               reduce using rule 25 (Termo -> Fator .)
    >               reduce using rule 25 (Termo -> Fator .)
    <               reduce using rule 25 (Termo -> Fator .)
    )               reduce using rule 25 (Termo -> Fator .)
    &               reduce using rule 25 (Termo -> Fator .)
    |               reduce using rule 25 (Termo -> Fator .)
    ]               reduce using rule 25 (Termo -> Fator .)


state 12

    (27) Fator -> num .

    *               reduce using rule 27 (Fator -> num .)
    /               reduce using rule 27 (Fator -> num .)
    %               reduce using rule 27 (Fator -> num .)
    +               reduce using rule 27 (Fator -> num .)
    -               reduce using rule 27 (Fator -> num .)
    =               reduce using rule 27 (Fator -> num .)
    !               reduce using rule 27 (Fator -> num .)
    >               reduce using rule 27 (Fator -> num .)
    <               reduce using rule 27 (Fator -> num .)
    )               reduce using rule 27 (Fator -> num .)
    &               reduce using rule 27 (Fator -> num .)
    |               reduce using rule 27 (Fator -> num .)
    ]               reduce using rule 27 (Fator -> num .)


state 13

    (28) Fator -> id .
    (29) Fator -> id . [ Exp ]

    *               reduce using rule 28 (Fator -> id .)
    /               reduce using rule 28 (Fator -> id .)
    %               reduce using rule 28 (Fator -> id .)
    +               reduce using rule 28 (Fator -> id .)
    -               reduce using rule 28 (Fator -> id .)
    =               reduce using rule 28 (Fator -> id .)
    !               reduce using rule 28 (Fator -> id .)
    >               reduce using rule 28 (Fator -> id .)
    <               reduce using rule 28 (Fator -> id .)
    )               reduce using rule 28 (Fator -> id .)
    &               reduce using rule 28 (Fator -> id .)
    |               reduce using rule 28 (Fator -> id .)
    ]               reduce using rule 28 (Fator -> id .)
    [               shift and go to state 32


state 14

    (6) Cond -> ( Condicaobase . )
    (5) LCondd -> Condicaobase .

    )               shift and go to state 33
    &               reduce using rule 5 (LCondd -> Condicaobase .)
    |               reduce using rule 5 (LCondd -> Condicaobase .)


state 15

    (26) Fator -> ( Exp . )
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo
    (8) Cond -> Exp . Oper Exp
    (10) Cond -> Exp .
    (13) Oper -> . = =
    (14) Oper -> . ! =
    (15) Oper -> . >
    (16) Oper -> . <
    (17) Oper -> . > =
    (18) Oper -> . < =

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 34
    +               shift and go to state 23
    -               shift and go to state 24
    &               reduce using rule 10 (Cond -> Exp .)
    |               reduce using rule 10 (Cond -> Exp .)
    =               shift and go to state 25
    !               shift and go to state 26
    >               shift and go to state 27
    <               shift and go to state 28

  ! )               [ reduce using rule 10 (Cond -> Exp .) ]

    Oper                           shift and go to state 22

state 16

    (2) Condicao -> ( Condicaobase ) .

    $end            reduce using rule 2 (Condicao -> ( Condicaobase ) .)


state 17

    (4) Condicaobase -> LCondd OperLogico . Cond
    (6) Cond -> . ( Condicaobase )
    (7) Cond -> . ! ( Condicaobase )
    (8) Cond -> . Exp Oper Exp
    (9) Cond -> . ! Exp
    (10) Cond -> . Exp
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 4
    !               shift and go to state 8
    num             shift and go to state 12
    id              shift and go to state 13

    Cond                           shift and go to state 35
    Exp                            shift and go to state 9
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 18

    (11) OperLogico -> & . &

    &               shift and go to state 36


state 19

    (12) OperLogico -> | . |

    |               shift and go to state 37


state 20

    (7) Cond -> ! ( . Condicaobase )
    (26) Fator -> ( . Exp )
    (3) Condicaobase -> . Cond
    (4) Condicaobase -> . LCondd OperLogico Cond
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (6) Cond -> . ( Condicaobase )
    (7) Cond -> . ! ( Condicaobase )
    (8) Cond -> . Exp Oper Exp
    (9) Cond -> . ! Exp
    (10) Cond -> . Exp
    (5) LCondd -> . Condicaobase
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 4
    !               shift and go to state 8
    num             shift and go to state 12
    id              shift and go to state 13

    Condicaobase                   shift and go to state 38
    Exp                            shift and go to state 15
    Cond                           shift and go to state 6
    LCondd                         shift and go to state 7
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 21

    (9) Cond -> ! Exp .
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo

    )               reduce using rule 9 (Cond -> ! Exp .)
    &               reduce using rule 9 (Cond -> ! Exp .)
    |               reduce using rule 9 (Cond -> ! Exp .)
    +               shift and go to state 23
    -               shift and go to state 24


state 22

    (8) Cond -> Exp Oper . Exp
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Exp                            shift and go to state 39
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 23

    (19) Exp -> Exp + . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Termo                          shift and go to state 41
    Fator                          shift and go to state 11

state 24

    (20) Exp -> Exp - . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Termo                          shift and go to state 42
    Fator                          shift and go to state 11

state 25

    (13) Oper -> = . =

    =               shift and go to state 43


state 26

    (14) Oper -> ! . =

    =               shift and go to state 44


state 27

    (15) Oper -> > .
    (17) Oper -> > . =

    (               reduce using rule 15 (Oper -> > .)
    num             reduce using rule 15 (Oper -> > .)
    id              reduce using rule 15 (Oper -> > .)
    =               shift and go to state 45


state 28

    (16) Oper -> < .
    (18) Oper -> < . =

    (               reduce using rule 16 (Oper -> < .)
    num             reduce using rule 16 (Oper -> < .)
    id              reduce using rule 16 (Oper -> < .)
    =               shift and go to state 46


state 29

    (22) Termo -> Termo * . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Fator                          shift and go to state 47

state 30

    (23) Termo -> Termo / . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Fator                          shift and go to state 48

state 31

    (24) Termo -> Termo % . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Fator                          shift and go to state 49

state 32

    (29) Fator -> id [ . Exp ]
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Exp                            shift and go to state 50
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 33

    (6) Cond -> ( Condicaobase ) .

    )               reduce using rule 6 (Cond -> ( Condicaobase ) .)
    &               reduce using rule 6 (Cond -> ( Condicaobase ) .)
    |               reduce using rule 6 (Cond -> ( Condicaobase ) .)


state 34

    (26) Fator -> ( Exp ) .

    *               reduce using rule 26 (Fator -> ( Exp ) .)
    /               reduce using rule 26 (Fator -> ( Exp ) .)
    %               reduce using rule 26 (Fator -> ( Exp ) .)
    +               reduce using rule 26 (Fator -> ( Exp ) .)
    -               reduce using rule 26 (Fator -> ( Exp ) .)
    =               reduce using rule 26 (Fator -> ( Exp ) .)
    !               reduce using rule 26 (Fator -> ( Exp ) .)
    >               reduce using rule 26 (Fator -> ( Exp ) .)
    <               reduce using rule 26 (Fator -> ( Exp ) .)
    )               reduce using rule 26 (Fator -> ( Exp ) .)
    &               reduce using rule 26 (Fator -> ( Exp ) .)
    |               reduce using rule 26 (Fator -> ( Exp ) .)
    ]               reduce using rule 26 (Fator -> ( Exp ) .)


state 35

    (4) Condicaobase -> LCondd OperLogico Cond .

    )               reduce using rule 4 (Condicaobase -> LCondd OperLogico Cond .)
    &               reduce using rule 4 (Condicaobase -> LCondd OperLogico Cond .)
    |               reduce using rule 4 (Condicaobase -> LCondd OperLogico Cond .)


state 36

    (11) OperLogico -> & & .

    (               reduce using rule 11 (OperLogico -> & & .)
    !               reduce using rule 11 (OperLogico -> & & .)
    num             reduce using rule 11 (OperLogico -> & & .)
    id              reduce using rule 11 (OperLogico -> & & .)


state 37

    (12) OperLogico -> | | .

    (               reduce using rule 12 (OperLogico -> | | .)
    !               reduce using rule 12 (OperLogico -> | | .)
    num             reduce using rule 12 (OperLogico -> | | .)
    id              reduce using rule 12 (OperLogico -> | | .)


state 38

    (7) Cond -> ! ( Condicaobase . )
    (5) LCondd -> Condicaobase .

    )               shift and go to state 51
    &               reduce using rule 5 (LCondd -> Condicaobase .)
    |               reduce using rule 5 (LCondd -> Condicaobase .)


state 39

    (8) Cond -> Exp Oper Exp .
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo

    )               reduce using rule 8 (Cond -> Exp Oper Exp .)
    &               reduce using rule 8 (Cond -> Exp Oper Exp .)
    |               reduce using rule 8 (Cond -> Exp Oper Exp .)
    +               shift and go to state 23
    -               shift and go to state 24


state 40

    (26) Fator -> ( . Exp )
    (19) Exp -> . Exp + Termo
    (20) Exp -> . Exp - Termo
    (21) Exp -> . Termo
    (22) Termo -> . Termo * Fator
    (23) Termo -> . Termo / Fator
    (24) Termo -> . Termo % Fator
    (25) Termo -> . Fator
    (26) Fator -> . ( Exp )
    (27) Fator -> . num
    (28) Fator -> . id
    (29) Fator -> . id [ Exp ]

    (               shift and go to state 40
    num             shift and go to state 12
    id              shift and go to state 13

    Exp                            shift and go to state 52
    Termo                          shift and go to state 10
    Fator                          shift and go to state 11

state 41

    (19) Exp -> Exp + Termo .
    (22) Termo -> Termo . * Fator
    (23) Termo -> Termo . / Fator
    (24) Termo -> Termo . % Fator

    +               reduce using rule 19 (Exp -> Exp + Termo .)
    -               reduce using rule 19 (Exp -> Exp + Termo .)
    =               reduce using rule 19 (Exp -> Exp + Termo .)
    !               reduce using rule 19 (Exp -> Exp + Termo .)
    >               reduce using rule 19 (Exp -> Exp + Termo .)
    <               reduce using rule 19 (Exp -> Exp + Termo .)
    )               reduce using rule 19 (Exp -> Exp + Termo .)
    &               reduce using rule 19 (Exp -> Exp + Termo .)
    |               reduce using rule 19 (Exp -> Exp + Termo .)
    ]               reduce using rule 19 (Exp -> Exp + Termo .)
    *               shift and go to state 29
    /               shift and go to state 30
    %               shift and go to state 31


state 42

    (20) Exp -> Exp - Termo .
    (22) Termo -> Termo . * Fator
    (23) Termo -> Termo . / Fator
    (24) Termo -> Termo . % Fator

    +               reduce using rule 20 (Exp -> Exp - Termo .)
    -               reduce using rule 20 (Exp -> Exp - Termo .)
    =               reduce using rule 20 (Exp -> Exp - Termo .)
    !               reduce using rule 20 (Exp -> Exp - Termo .)
    >               reduce using rule 20 (Exp -> Exp - Termo .)
    <               reduce using rule 20 (Exp -> Exp - Termo .)
    )               reduce using rule 20 (Exp -> Exp - Termo .)
    &               reduce using rule 20 (Exp -> Exp - Termo .)
    |               reduce using rule 20 (Exp -> Exp - Termo .)
    ]               reduce using rule 20 (Exp -> Exp - Termo .)
    *               shift and go to state 29
    /               shift and go to state 30
    %               shift and go to state 31


state 43

    (13) Oper -> = = .

    (               reduce using rule 13 (Oper -> = = .)
    num             reduce using rule 13 (Oper -> = = .)
    id              reduce using rule 13 (Oper -> = = .)


state 44

    (14) Oper -> ! = .

    (               reduce using rule 14 (Oper -> ! = .)
    num             reduce using rule 14 (Oper -> ! = .)
    id              reduce using rule 14 (Oper -> ! = .)


state 45

    (17) Oper -> > = .

    (               reduce using rule 17 (Oper -> > = .)
    num             reduce using rule 17 (Oper -> > = .)
    id              reduce using rule 17 (Oper -> > = .)


state 46

    (18) Oper -> < = .

    (               reduce using rule 18 (Oper -> < = .)
    num             reduce using rule 18 (Oper -> < = .)
    id              reduce using rule 18 (Oper -> < = .)


state 47

    (22) Termo -> Termo * Fator .

    *               reduce using rule 22 (Termo -> Termo * Fator .)
    /               reduce using rule 22 (Termo -> Termo * Fator .)
    %               reduce using rule 22 (Termo -> Termo * Fator .)
    +               reduce using rule 22 (Termo -> Termo * Fator .)
    -               reduce using rule 22 (Termo -> Termo * Fator .)
    =               reduce using rule 22 (Termo -> Termo * Fator .)
    !               reduce using rule 22 (Termo -> Termo * Fator .)
    >               reduce using rule 22 (Termo -> Termo * Fator .)
    <               reduce using rule 22 (Termo -> Termo * Fator .)
    )               reduce using rule 22 (Termo -> Termo * Fator .)
    &               reduce using rule 22 (Termo -> Termo * Fator .)
    |               reduce using rule 22 (Termo -> Termo * Fator .)
    ]               reduce using rule 22 (Termo -> Termo * Fator .)


state 48

    (23) Termo -> Termo / Fator .

    *               reduce using rule 23 (Termo -> Termo / Fator .)
    /               reduce using rule 23 (Termo -> Termo / Fator .)
    %               reduce using rule 23 (Termo -> Termo / Fator .)
    +               reduce using rule 23 (Termo -> Termo / Fator .)
    -               reduce using rule 23 (Termo -> Termo / Fator .)
    =               reduce using rule 23 (Termo -> Termo / Fator .)
    !               reduce using rule 23 (Termo -> Termo / Fator .)
    >               reduce using rule 23 (Termo -> Termo / Fator .)
    <               reduce using rule 23 (Termo -> Termo / Fator .)
    )               reduce using rule 23 (Termo -> Termo / Fator .)
    &               reduce using rule 23 (Termo -> Termo / Fator .)
    |               reduce using rule 23 (Termo -> Termo / Fator .)
    ]               reduce using rule 23 (Termo -> Termo / Fator .)


state 49

    (24) Termo -> Termo % Fator .

    *               reduce using rule 24 (Termo -> Termo % Fator .)
    /               reduce using rule 24 (Termo -> Termo % Fator .)
    %               reduce using rule 24 (Termo -> Termo % Fator .)
    +               reduce using rule 24 (Termo -> Termo % Fator .)
    -               reduce using rule 24 (Termo -> Termo % Fator .)
    =               reduce using rule 24 (Termo -> Termo % Fator .)
    !               reduce using rule 24 (Termo -> Termo % Fator .)
    >               reduce using rule 24 (Termo -> Termo % Fator .)
    <               reduce using rule 24 (Termo -> Termo % Fator .)
    )               reduce using rule 24 (Termo -> Termo % Fator .)
    &               reduce using rule 24 (Termo -> Termo % Fator .)
    |               reduce using rule 24 (Termo -> Termo % Fator .)
    ]               reduce using rule 24 (Termo -> Termo % Fator .)


state 50

    (29) Fator -> id [ Exp . ]
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo

    ]               shift and go to state 53
    +               shift and go to state 23
    -               shift and go to state 24


state 51

    (7) Cond -> ! ( Condicaobase ) .

    )               reduce using rule 7 (Cond -> ! ( Condicaobase ) .)
    &               reduce using rule 7 (Cond -> ! ( Condicaobase ) .)
    |               reduce using rule 7 (Cond -> ! ( Condicaobase ) .)


state 52

    (26) Fator -> ( Exp . )
    (19) Exp -> Exp . + Termo
    (20) Exp -> Exp . - Termo

    )               shift and go to state 34
    +               shift and go to state 23
    -               shift and go to state 24


state 53

    (29) Fator -> id [ Exp ] .

    *               reduce using rule 29 (Fator -> id [ Exp ] .)
    /               reduce using rule 29 (Fator -> id [ Exp ] .)
    %               reduce using rule 29 (Fator -> id [ Exp ] .)
    +               reduce using rule 29 (Fator -> id [ Exp ] .)
    -               reduce using rule 29 (Fator -> id [ Exp ] .)
    =               reduce using rule 29 (Fator -> id [ Exp ] .)
    !               reduce using rule 29 (Fator -> id [ Exp ] .)
    >               reduce using rule 29 (Fator -> id [ Exp ] .)
    <               reduce using rule 29 (Fator -> id [ Exp ] .)
    )               reduce using rule 29 (Fator -> id [ Exp ] .)
    &               reduce using rule 29 (Fator -> id [ Exp ] .)
    |               reduce using rule 29 (Fator -> id [ Exp ] .)
    ]               reduce using rule 29 (Fator -> id [ Exp ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 15 resolved as shift
