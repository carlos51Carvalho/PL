// exemplos de codigo na linguagem a traduzir e os tokens/literals que vamos usar

VARS
	int i
	int i = n
	
	int l[10]

//	int a, b
//	int i=n, j=k
//	int l[10], d[10]
ENDVARS


BEGIN
	print a
	read a

	i = exp
	print exp


	read(a)
	read(b)
	if(a>b)
		print a
	

	if(a>b){
		print(a)
	}
	else{
		print(b)
	}



	i = 0

	repeat(10){
		read(lista[i])
		i=i+1
	}

END

// Repeat
repeat(num){
	Instrucoes
}

pushi num
storeg (posicao da variavel do ciclo)
ciclo1:
	pushg (posicao da variavel do ciclo)
	pushi 0
	not
	equal
	jz fimciclo1

	

	jump ciclo1
fimciclo1:




// while
while(cond){
	Instrucoes
}

pushi num
storeg (posicao da variavel do ciclo)
ciclo1:
	pushg (posicao da variavel do ciclo)
	pushi 0
	not
	equal
	jz fimciclo1

	

	jump ciclo1
fimciclo1:









tokens=["VARS", "ENDVARS", 
		"BEGIN", "END", 
		"num", "id"
		"int", "print", "read", 
		"if", "else"]

literals=['(', ')', 
	    	'{', '}', 
			'+', '-', '*', '/', '%',
			'>', '<', '=']				<- ?


P={
	Program => Declaracoes Corpo
	

	Declaracoes => VARS Decls ENDVARS
				 | 
	Decls => Decl Decls
		   | 
	Decl => int id


	Corpo => BEGIN Instrucoes END
	Instrucoes => Intrucao Intrucoes
				|
	Intrucao => print num
}




