Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Progama
Rule 1     Progama -> Declaracoes Corpo
Rule 2     Declaracoes -> VARS Decls ENDVARS
Rule 3     Declaracoes -> <empty>
Rule 4     Decls -> Decls Decl
Rule 5     Decls -> <empty>
Rule 6     Decl -> int DecIntList
Rule 7     DecIntList -> DecIntList , DeclInt
Rule 8     DecIntList -> DeclInt
Rule 9     DeclInt -> id
Rule 10    DeclInt -> id = num
Rule 11    DeclInt -> id [ num ]
Rule 12    DeclInt -> id [ num ] [ num ]
Rule 13    Corpo -> BEGIN Instrucoes END
Rule 14    Corpo -> Funcoes BEGIN Instrucoes END
Rule 15    Funcoes -> Funcoes Funcao
Rule 16    Funcoes -> Funcao
Rule 17    Funcao -> FuncaoHeader FuncaoCorpo
Rule 18    FuncaoHeader -> FUNCTION id
Rule 19    FuncaoCorpo -> BEGIN Instrucoes END
Rule 20    Instrucoes -> Instrucoes Instrucao
Rule 21    Instrucoes -> <empty>
Rule 22    Instrucao -> id ( )
Rule 23    Instrucao -> print str
Rule 24    Instrucao -> print Exp
Rule 25    Instrucao -> id = Exp
Rule 26    Instrucao -> id Op = Exp
Rule 27    Op -> +
Rule 28    Op -> -
Rule 29    Op -> *
Rule 30    Op -> /
Rule 31    Op -> %
Rule 32    Instrucao -> id - -
Rule 33    Instrucao -> id + +
Rule 34    Instrucao -> id [ Exp ] = Exp
Rule 35    Instrucao -> id [ Exp ] + +
Rule 36    Instrucao -> id [ Exp ] - -
Rule 37    Instrucao -> id [ Exp ] [ Exp ] = Exp
Rule 38    Instrucao -> id [ Exp ] [ Exp ] - -
Rule 39    Instrucao -> id [ Exp ] [ Exp ] + +
Rule 40    Instrucao -> read id
Rule 41    Instrucao -> read id [ Exp ]
Rule 42    Instrucao -> read id [ Exp ] [ Exp ]
Rule 43    Instrucao -> if Condicao Then Else
Rule 44    Instrucao -> if Condicao Then
Rule 45    Then -> { Instrucoes }
Rule 46    Then -> Instrucao
Rule 47    Else -> else { Instrucoes }
Rule 48    Else -> else Instrucao
Rule 49    Condicao -> ( Cond )
Rule 50    Cond -> Cond | | Cond2
Rule 51    Cond -> Cond2
Rule 52    Cond2 -> Cond2 & & Cond3
Rule 53    Cond2 -> Cond3
Rule 54    Cond3 -> ! Cond
Rule 55    Cond3 -> ( Cond )
Rule 56    Cond3 -> ExpRel
Rule 57    ExpRel -> Exp Oper Exp
Rule 58    ExpRel -> Exp
Rule 59    Oper -> = =
Rule 60    Oper -> < >
Rule 61    Oper -> >
Rule 62    Oper -> <
Rule 63    Oper -> > =
Rule 64    Oper -> < =
Rule 65    Instrucao -> repeat CorpoCiclo until Condicao
Rule 66    CorpoCiclo -> { Instrucoes }
Rule 67    CorpoCiclo -> Instrucao
Rule 68    Instrucao -> while Condicao CorpoCiclo
Rule 69    Exp -> Exp + Termo
Rule 70    Exp -> Exp - Termo
Rule 71    Exp -> Termo
Rule 72    Termo -> Termo * Fator
Rule 73    Termo -> Termo / Fator
Rule 74    Termo -> Termo % Fator
Rule 75    Termo -> Fator
Rule 76    Fator -> ( Exp )
Rule 77    Fator -> num
Rule 78    Fator -> id
Rule 79    Fator -> id [ Exp ]
Rule 80    Fator -> id [ Exp ] [ Exp ]

Terminals, with rules where they appear

!                    : 54
%                    : 31 74
&                    : 52 52
(                    : 22 49 55 76
)                    : 22 49 55 76
*                    : 29 72
+                    : 27 33 33 35 35 39 39 69
,                    : 7
-                    : 28 32 32 36 36 38 38 70
/                    : 30 73
<                    : 60 62 64
=                    : 10 25 26 34 37 59 59 63 64
>                    : 60 61 63
BEGIN                : 13 14 19
END                  : 13 14 19
ENDVARS              : 2
FUNCTION             : 18
VARS                 : 2
[                    : 11 12 12 34 35 36 37 37 38 38 39 39 41 42 42 79 80 80
]                    : 11 12 12 34 35 36 37 37 38 38 39 39 41 42 42 79 80 80
else                 : 47 48
error                : 
id                   : 9 10 11 12 18 22 25 26 32 33 34 35 36 37 38 39 40 41 42 78 79 80
if                   : 43 44
int                  : 6
num                  : 10 11 12 12 77
print                : 23 24
read                 : 40 41 42
repeat               : 65
str                  : 23
until                : 65
while                : 68
{                    : 45 47 66
|                    : 50 50
}                    : 45 47 66

Nonterminals, with rules where they appear

Cond                 : 49 50 54 55
Cond2                : 50 51 52
Cond3                : 52 53
Condicao             : 43 44 65 68
Corpo                : 1
CorpoCiclo           : 65 68
DecIntList           : 6 7
Decl                 : 4
DeclInt              : 7 8
Declaracoes          : 1
Decls                : 2 4
Else                 : 43
Exp                  : 24 25 26 34 34 35 36 37 37 37 38 38 39 39 41 42 42 57 57 58 69 70 76 79 80 80
ExpRel               : 56
Fator                : 72 73 74 75
Funcao               : 15 16
FuncaoCorpo          : 17
FuncaoHeader         : 17
Funcoes              : 14 15
Instrucao            : 20 46 48 67
Instrucoes           : 13 14 19 20 45 47 66
Op                   : 26
Oper                 : 57
Progama              : 0
Termo                : 69 70 71 72 73 74
Then                 : 43 44

Parsing method: LALR

state 0

    (0) S' -> . Progama
    (1) Progama -> . Declaracoes Corpo
    (2) Declaracoes -> . VARS Decls ENDVARS
    (3) Declaracoes -> .

    VARS            shift and go to state 3
    BEGIN           reduce using rule 3 (Declaracoes -> .)
    FUNCTION        reduce using rule 3 (Declaracoes -> .)

    Progama                        shift and go to state 1
    Declaracoes                    shift and go to state 2

state 1

    (0) S' -> Progama .



state 2

    (1) Progama -> Declaracoes . Corpo
    (13) Corpo -> . BEGIN Instrucoes END
    (14) Corpo -> . Funcoes BEGIN Instrucoes END
    (15) Funcoes -> . Funcoes Funcao
    (16) Funcoes -> . Funcao
    (17) Funcao -> . FuncaoHeader FuncaoCorpo
    (18) FuncaoHeader -> . FUNCTION id

    BEGIN           shift and go to state 5
    FUNCTION        shift and go to state 9

    Corpo                          shift and go to state 4
    Funcoes                        shift and go to state 6
    Funcao                         shift and go to state 7
    FuncaoHeader                   shift and go to state 8

state 3

    (2) Declaracoes -> VARS . Decls ENDVARS
    (4) Decls -> . Decls Decl
    (5) Decls -> .

    ENDVARS         reduce using rule 5 (Decls -> .)
    int             reduce using rule 5 (Decls -> .)

    Decls                          shift and go to state 10

state 4

    (1) Progama -> Declaracoes Corpo .

    $end            reduce using rule 1 (Progama -> Declaracoes Corpo .)


state 5

    (13) Corpo -> BEGIN . Instrucoes END
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    END             reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 11

state 6

    (14) Corpo -> Funcoes . BEGIN Instrucoes END
    (15) Funcoes -> Funcoes . Funcao
    (17) Funcao -> . FuncaoHeader FuncaoCorpo
    (18) FuncaoHeader -> . FUNCTION id

    BEGIN           shift and go to state 12
    FUNCTION        shift and go to state 9

    Funcao                         shift and go to state 13
    FuncaoHeader                   shift and go to state 8

state 7

    (16) Funcoes -> Funcao .

    BEGIN           reduce using rule 16 (Funcoes -> Funcao .)
    FUNCTION        reduce using rule 16 (Funcoes -> Funcao .)


state 8

    (17) Funcao -> FuncaoHeader . FuncaoCorpo
    (19) FuncaoCorpo -> . BEGIN Instrucoes END

    BEGIN           shift and go to state 15

    FuncaoCorpo                    shift and go to state 14

state 9

    (18) FuncaoHeader -> FUNCTION . id

    id              shift and go to state 16


state 10

    (2) Declaracoes -> VARS Decls . ENDVARS
    (4) Decls -> Decls . Decl
    (6) Decl -> . int DecIntList

    ENDVARS         shift and go to state 17
    int             shift and go to state 19

    Decl                           shift and go to state 18

state 11

    (13) Corpo -> BEGIN Instrucoes . END
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    END             shift and go to state 20
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 12

    (14) Corpo -> Funcoes BEGIN . Instrucoes END
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    END             reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 28

state 13

    (15) Funcoes -> Funcoes Funcao .

    BEGIN           reduce using rule 15 (Funcoes -> Funcoes Funcao .)
    FUNCTION        reduce using rule 15 (Funcoes -> Funcoes Funcao .)


state 14

    (17) Funcao -> FuncaoHeader FuncaoCorpo .

    BEGIN           reduce using rule 17 (Funcao -> FuncaoHeader FuncaoCorpo .)
    FUNCTION        reduce using rule 17 (Funcao -> FuncaoHeader FuncaoCorpo .)


state 15

    (19) FuncaoCorpo -> BEGIN . Instrucoes END
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    END             reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 29

state 16

    (18) FuncaoHeader -> FUNCTION id .

    BEGIN           reduce using rule 18 (FuncaoHeader -> FUNCTION id .)


state 17

    (2) Declaracoes -> VARS Decls ENDVARS .

    BEGIN           reduce using rule 2 (Declaracoes -> VARS Decls ENDVARS .)
    FUNCTION        reduce using rule 2 (Declaracoes -> VARS Decls ENDVARS .)


state 18

    (4) Decls -> Decls Decl .

    ENDVARS         reduce using rule 4 (Decls -> Decls Decl .)
    int             reduce using rule 4 (Decls -> Decls Decl .)


state 19

    (6) Decl -> int . DecIntList
    (7) DecIntList -> . DecIntList , DeclInt
    (8) DecIntList -> . DeclInt
    (9) DeclInt -> . id
    (10) DeclInt -> . id = num
    (11) DeclInt -> . id [ num ]
    (12) DeclInt -> . id [ num ] [ num ]

    id              shift and go to state 32

    DecIntList                     shift and go to state 30
    DeclInt                        shift and go to state 31

state 20

    (13) Corpo -> BEGIN Instrucoes END .

    $end            reduce using rule 13 (Corpo -> BEGIN Instrucoes END .)


state 21

    (20) Instrucoes -> Instrucoes Instrucao .

    END             reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    id              reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    print           reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    read            reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    if              reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    repeat          reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    while           reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)
    }               reduce using rule 20 (Instrucoes -> Instrucoes Instrucao .)


state 22

    (22) Instrucao -> id . ( )
    (25) Instrucao -> id . = Exp
    (26) Instrucao -> id . Op = Exp
    (32) Instrucao -> id . - -
    (33) Instrucao -> id . + +
    (34) Instrucao -> id . [ Exp ] = Exp
    (35) Instrucao -> id . [ Exp ] + +
    (36) Instrucao -> id . [ Exp ] - -
    (37) Instrucao -> id . [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> id . [ Exp ] [ Exp ] - -
    (39) Instrucao -> id . [ Exp ] [ Exp ] + +
    (27) Op -> . +
    (28) Op -> . -
    (29) Op -> . *
    (30) Op -> . /
    (31) Op -> . %

    (               shift and go to state 33
    =               shift and go to state 34
    -               shift and go to state 36
    +               shift and go to state 37
    [               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40
    %               shift and go to state 41

    Op                             shift and go to state 35

state 23

    (23) Instrucao -> print . str
    (24) Instrucao -> print . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    str             shift and go to state 42
    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 43
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 24

    (40) Instrucao -> read . id
    (41) Instrucao -> read . id [ Exp ]
    (42) Instrucao -> read . id [ Exp ] [ Exp ]

    id              shift and go to state 49


state 25

    (43) Instrucao -> if . Condicao Then Else
    (44) Instrucao -> if . Condicao Then
    (49) Condicao -> . ( Cond )

    (               shift and go to state 51

    Condicao                       shift and go to state 50

state 26

    (65) Instrucao -> repeat . CorpoCiclo until Condicao
    (66) CorpoCiclo -> . { Instrucoes }
    (67) CorpoCiclo -> . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    {               shift and go to state 53
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    CorpoCiclo                     shift and go to state 52
    Instrucao                      shift and go to state 54

state 27

    (68) Instrucao -> while . Condicao CorpoCiclo
    (49) Condicao -> . ( Cond )

    (               shift and go to state 51

    Condicao                       shift and go to state 55

state 28

    (14) Corpo -> Funcoes BEGIN Instrucoes . END
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    END             shift and go to state 56
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 29

    (19) FuncaoCorpo -> BEGIN Instrucoes . END
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    END             shift and go to state 57
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 30

    (6) Decl -> int DecIntList .
    (7) DecIntList -> DecIntList . , DeclInt

    ENDVARS         reduce using rule 6 (Decl -> int DecIntList .)
    int             reduce using rule 6 (Decl -> int DecIntList .)
    ,               shift and go to state 58


state 31

    (8) DecIntList -> DeclInt .

    ,               reduce using rule 8 (DecIntList -> DeclInt .)
    ENDVARS         reduce using rule 8 (DecIntList -> DeclInt .)
    int             reduce using rule 8 (DecIntList -> DeclInt .)


state 32

    (9) DeclInt -> id .
    (10) DeclInt -> id . = num
    (11) DeclInt -> id . [ num ]
    (12) DeclInt -> id . [ num ] [ num ]

    ,               reduce using rule 9 (DeclInt -> id .)
    ENDVARS         reduce using rule 9 (DeclInt -> id .)
    int             reduce using rule 9 (DeclInt -> id .)
    =               shift and go to state 59
    [               shift and go to state 60


state 33

    (22) Instrucao -> id ( . )

    )               shift and go to state 61


state 34

    (25) Instrucao -> id = . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 62
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 35

    (26) Instrucao -> id Op . = Exp

    =               shift and go to state 63


state 36

    (32) Instrucao -> id - . -
    (28) Op -> - .

    -               shift and go to state 64
    =               reduce using rule 28 (Op -> - .)


state 37

    (33) Instrucao -> id + . +
    (27) Op -> + .

    +               shift and go to state 65
    =               reduce using rule 27 (Op -> + .)


state 38

    (34) Instrucao -> id [ . Exp ] = Exp
    (35) Instrucao -> id [ . Exp ] + +
    (36) Instrucao -> id [ . Exp ] - -
    (37) Instrucao -> id [ . Exp ] [ Exp ] = Exp
    (38) Instrucao -> id [ . Exp ] [ Exp ] - -
    (39) Instrucao -> id [ . Exp ] [ Exp ] + +
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 66
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 39

    (29) Op -> * .

    =               reduce using rule 29 (Op -> * .)


state 40

    (30) Op -> / .

    =               reduce using rule 30 (Op -> / .)


state 41

    (31) Op -> % .

    =               reduce using rule 31 (Op -> % .)


state 42

    (23) Instrucao -> print str .

    END             reduce using rule 23 (Instrucao -> print str .)
    id              reduce using rule 23 (Instrucao -> print str .)
    print           reduce using rule 23 (Instrucao -> print str .)
    read            reduce using rule 23 (Instrucao -> print str .)
    if              reduce using rule 23 (Instrucao -> print str .)
    repeat          reduce using rule 23 (Instrucao -> print str .)
    while           reduce using rule 23 (Instrucao -> print str .)
    until           reduce using rule 23 (Instrucao -> print str .)
    else            reduce using rule 23 (Instrucao -> print str .)
    }               reduce using rule 23 (Instrucao -> print str .)


state 43

    (24) Instrucao -> print Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    END             reduce using rule 24 (Instrucao -> print Exp .)
    id              reduce using rule 24 (Instrucao -> print Exp .)
    print           reduce using rule 24 (Instrucao -> print Exp .)
    read            reduce using rule 24 (Instrucao -> print Exp .)
    if              reduce using rule 24 (Instrucao -> print Exp .)
    repeat          reduce using rule 24 (Instrucao -> print Exp .)
    while           reduce using rule 24 (Instrucao -> print Exp .)
    until           reduce using rule 24 (Instrucao -> print Exp .)
    else            reduce using rule 24 (Instrucao -> print Exp .)
    }               reduce using rule 24 (Instrucao -> print Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 44

    (71) Exp -> Termo .
    (72) Termo -> Termo . * Fator
    (73) Termo -> Termo . / Fator
    (74) Termo -> Termo . % Fator

    +               reduce using rule 71 (Exp -> Termo .)
    -               reduce using rule 71 (Exp -> Termo .)
    END             reduce using rule 71 (Exp -> Termo .)
    id              reduce using rule 71 (Exp -> Termo .)
    print           reduce using rule 71 (Exp -> Termo .)
    read            reduce using rule 71 (Exp -> Termo .)
    if              reduce using rule 71 (Exp -> Termo .)
    repeat          reduce using rule 71 (Exp -> Termo .)
    while           reduce using rule 71 (Exp -> Termo .)
    until           reduce using rule 71 (Exp -> Termo .)
    else            reduce using rule 71 (Exp -> Termo .)
    }               reduce using rule 71 (Exp -> Termo .)
    ]               reduce using rule 71 (Exp -> Termo .)
    )               reduce using rule 71 (Exp -> Termo .)
    =               reduce using rule 71 (Exp -> Termo .)
    <               reduce using rule 71 (Exp -> Termo .)
    >               reduce using rule 71 (Exp -> Termo .)
    &               reduce using rule 71 (Exp -> Termo .)
    |               reduce using rule 71 (Exp -> Termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 45

    (75) Termo -> Fator .

    *               reduce using rule 75 (Termo -> Fator .)
    /               reduce using rule 75 (Termo -> Fator .)
    %               reduce using rule 75 (Termo -> Fator .)
    +               reduce using rule 75 (Termo -> Fator .)
    -               reduce using rule 75 (Termo -> Fator .)
    END             reduce using rule 75 (Termo -> Fator .)
    id              reduce using rule 75 (Termo -> Fator .)
    print           reduce using rule 75 (Termo -> Fator .)
    read            reduce using rule 75 (Termo -> Fator .)
    if              reduce using rule 75 (Termo -> Fator .)
    repeat          reduce using rule 75 (Termo -> Fator .)
    while           reduce using rule 75 (Termo -> Fator .)
    until           reduce using rule 75 (Termo -> Fator .)
    else            reduce using rule 75 (Termo -> Fator .)
    }               reduce using rule 75 (Termo -> Fator .)
    ]               reduce using rule 75 (Termo -> Fator .)
    )               reduce using rule 75 (Termo -> Fator .)
    =               reduce using rule 75 (Termo -> Fator .)
    <               reduce using rule 75 (Termo -> Fator .)
    >               reduce using rule 75 (Termo -> Fator .)
    &               reduce using rule 75 (Termo -> Fator .)
    |               reduce using rule 75 (Termo -> Fator .)


state 46

    (76) Fator -> ( . Exp )
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 72
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 47

    (77) Fator -> num .

    *               reduce using rule 77 (Fator -> num .)
    /               reduce using rule 77 (Fator -> num .)
    %               reduce using rule 77 (Fator -> num .)
    +               reduce using rule 77 (Fator -> num .)
    -               reduce using rule 77 (Fator -> num .)
    END             reduce using rule 77 (Fator -> num .)
    id              reduce using rule 77 (Fator -> num .)
    print           reduce using rule 77 (Fator -> num .)
    read            reduce using rule 77 (Fator -> num .)
    if              reduce using rule 77 (Fator -> num .)
    repeat          reduce using rule 77 (Fator -> num .)
    while           reduce using rule 77 (Fator -> num .)
    until           reduce using rule 77 (Fator -> num .)
    else            reduce using rule 77 (Fator -> num .)
    }               reduce using rule 77 (Fator -> num .)
    ]               reduce using rule 77 (Fator -> num .)
    )               reduce using rule 77 (Fator -> num .)
    =               reduce using rule 77 (Fator -> num .)
    <               reduce using rule 77 (Fator -> num .)
    >               reduce using rule 77 (Fator -> num .)
    &               reduce using rule 77 (Fator -> num .)
    |               reduce using rule 77 (Fator -> num .)


state 48

    (78) Fator -> id .
    (79) Fator -> id . [ Exp ]
    (80) Fator -> id . [ Exp ] [ Exp ]

    *               reduce using rule 78 (Fator -> id .)
    /               reduce using rule 78 (Fator -> id .)
    %               reduce using rule 78 (Fator -> id .)
    +               reduce using rule 78 (Fator -> id .)
    -               reduce using rule 78 (Fator -> id .)
    END             reduce using rule 78 (Fator -> id .)
    id              reduce using rule 78 (Fator -> id .)
    print           reduce using rule 78 (Fator -> id .)
    read            reduce using rule 78 (Fator -> id .)
    if              reduce using rule 78 (Fator -> id .)
    repeat          reduce using rule 78 (Fator -> id .)
    while           reduce using rule 78 (Fator -> id .)
    until           reduce using rule 78 (Fator -> id .)
    else            reduce using rule 78 (Fator -> id .)
    }               reduce using rule 78 (Fator -> id .)
    ]               reduce using rule 78 (Fator -> id .)
    )               reduce using rule 78 (Fator -> id .)
    =               reduce using rule 78 (Fator -> id .)
    <               reduce using rule 78 (Fator -> id .)
    >               reduce using rule 78 (Fator -> id .)
    &               reduce using rule 78 (Fator -> id .)
    |               reduce using rule 78 (Fator -> id .)
    [               shift and go to state 73


state 49

    (40) Instrucao -> read id .
    (41) Instrucao -> read id . [ Exp ]
    (42) Instrucao -> read id . [ Exp ] [ Exp ]

    END             reduce using rule 40 (Instrucao -> read id .)
    id              reduce using rule 40 (Instrucao -> read id .)
    print           reduce using rule 40 (Instrucao -> read id .)
    read            reduce using rule 40 (Instrucao -> read id .)
    if              reduce using rule 40 (Instrucao -> read id .)
    repeat          reduce using rule 40 (Instrucao -> read id .)
    while           reduce using rule 40 (Instrucao -> read id .)
    until           reduce using rule 40 (Instrucao -> read id .)
    else            reduce using rule 40 (Instrucao -> read id .)
    }               reduce using rule 40 (Instrucao -> read id .)
    [               shift and go to state 74


state 50

    (43) Instrucao -> if Condicao . Then Else
    (44) Instrucao -> if Condicao . Then
    (45) Then -> . { Instrucoes }
    (46) Then -> . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    {               shift and go to state 76
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Then                           shift and go to state 75
    Instrucao                      shift and go to state 77

state 51

    (49) Condicao -> ( . Cond )
    (50) Cond -> . Cond | | Cond2
    (51) Cond -> . Cond2
    (52) Cond2 -> . Cond2 & & Cond3
    (53) Cond2 -> . Cond3
    (54) Cond3 -> . ! Cond
    (55) Cond3 -> . ( Cond )
    (56) Cond3 -> . ExpRel
    (57) ExpRel -> . Exp Oper Exp
    (58) ExpRel -> . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    !               shift and go to state 82
    (               shift and go to state 78
    num             shift and go to state 47
    id              shift and go to state 48

    Cond                           shift and go to state 79
    Cond2                          shift and go to state 80
    Cond3                          shift and go to state 81
    ExpRel                         shift and go to state 83
    Exp                            shift and go to state 84
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 52

    (65) Instrucao -> repeat CorpoCiclo . until Condicao

    until           shift and go to state 85


state 53

    (66) CorpoCiclo -> { . Instrucoes }
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    }               reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 86

state 54

    (67) CorpoCiclo -> Instrucao .

    until           reduce using rule 67 (CorpoCiclo -> Instrucao .)
    else            reduce using rule 67 (CorpoCiclo -> Instrucao .)
    END             reduce using rule 67 (CorpoCiclo -> Instrucao .)
    id              reduce using rule 67 (CorpoCiclo -> Instrucao .)
    print           reduce using rule 67 (CorpoCiclo -> Instrucao .)
    read            reduce using rule 67 (CorpoCiclo -> Instrucao .)
    if              reduce using rule 67 (CorpoCiclo -> Instrucao .)
    repeat          reduce using rule 67 (CorpoCiclo -> Instrucao .)
    while           reduce using rule 67 (CorpoCiclo -> Instrucao .)
    }               reduce using rule 67 (CorpoCiclo -> Instrucao .)


state 55

    (68) Instrucao -> while Condicao . CorpoCiclo
    (66) CorpoCiclo -> . { Instrucoes }
    (67) CorpoCiclo -> . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    {               shift and go to state 53
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    CorpoCiclo                     shift and go to state 87
    Instrucao                      shift and go to state 54

state 56

    (14) Corpo -> Funcoes BEGIN Instrucoes END .

    $end            reduce using rule 14 (Corpo -> Funcoes BEGIN Instrucoes END .)


state 57

    (19) FuncaoCorpo -> BEGIN Instrucoes END .

    BEGIN           reduce using rule 19 (FuncaoCorpo -> BEGIN Instrucoes END .)
    FUNCTION        reduce using rule 19 (FuncaoCorpo -> BEGIN Instrucoes END .)


state 58

    (7) DecIntList -> DecIntList , . DeclInt
    (9) DeclInt -> . id
    (10) DeclInt -> . id = num
    (11) DeclInt -> . id [ num ]
    (12) DeclInt -> . id [ num ] [ num ]

    id              shift and go to state 32

    DeclInt                        shift and go to state 88

state 59

    (10) DeclInt -> id = . num

    num             shift and go to state 89


state 60

    (11) DeclInt -> id [ . num ]
    (12) DeclInt -> id [ . num ] [ num ]

    num             shift and go to state 90


state 61

    (22) Instrucao -> id ( ) .

    END             reduce using rule 22 (Instrucao -> id ( ) .)
    id              reduce using rule 22 (Instrucao -> id ( ) .)
    print           reduce using rule 22 (Instrucao -> id ( ) .)
    read            reduce using rule 22 (Instrucao -> id ( ) .)
    if              reduce using rule 22 (Instrucao -> id ( ) .)
    repeat          reduce using rule 22 (Instrucao -> id ( ) .)
    while           reduce using rule 22 (Instrucao -> id ( ) .)
    until           reduce using rule 22 (Instrucao -> id ( ) .)
    else            reduce using rule 22 (Instrucao -> id ( ) .)
    }               reduce using rule 22 (Instrucao -> id ( ) .)


state 62

    (25) Instrucao -> id = Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    END             reduce using rule 25 (Instrucao -> id = Exp .)
    id              reduce using rule 25 (Instrucao -> id = Exp .)
    print           reduce using rule 25 (Instrucao -> id = Exp .)
    read            reduce using rule 25 (Instrucao -> id = Exp .)
    if              reduce using rule 25 (Instrucao -> id = Exp .)
    repeat          reduce using rule 25 (Instrucao -> id = Exp .)
    while           reduce using rule 25 (Instrucao -> id = Exp .)
    until           reduce using rule 25 (Instrucao -> id = Exp .)
    else            reduce using rule 25 (Instrucao -> id = Exp .)
    }               reduce using rule 25 (Instrucao -> id = Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 63

    (26) Instrucao -> id Op = . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 91
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 64

    (32) Instrucao -> id - - .

    END             reduce using rule 32 (Instrucao -> id - - .)
    id              reduce using rule 32 (Instrucao -> id - - .)
    print           reduce using rule 32 (Instrucao -> id - - .)
    read            reduce using rule 32 (Instrucao -> id - - .)
    if              reduce using rule 32 (Instrucao -> id - - .)
    repeat          reduce using rule 32 (Instrucao -> id - - .)
    while           reduce using rule 32 (Instrucao -> id - - .)
    until           reduce using rule 32 (Instrucao -> id - - .)
    else            reduce using rule 32 (Instrucao -> id - - .)
    }               reduce using rule 32 (Instrucao -> id - - .)


state 65

    (33) Instrucao -> id + + .

    END             reduce using rule 33 (Instrucao -> id + + .)
    id              reduce using rule 33 (Instrucao -> id + + .)
    print           reduce using rule 33 (Instrucao -> id + + .)
    read            reduce using rule 33 (Instrucao -> id + + .)
    if              reduce using rule 33 (Instrucao -> id + + .)
    repeat          reduce using rule 33 (Instrucao -> id + + .)
    while           reduce using rule 33 (Instrucao -> id + + .)
    until           reduce using rule 33 (Instrucao -> id + + .)
    else            reduce using rule 33 (Instrucao -> id + + .)
    }               reduce using rule 33 (Instrucao -> id + + .)


state 66

    (34) Instrucao -> id [ Exp . ] = Exp
    (35) Instrucao -> id [ Exp . ] + +
    (36) Instrucao -> id [ Exp . ] - -
    (37) Instrucao -> id [ Exp . ] [ Exp ] = Exp
    (38) Instrucao -> id [ Exp . ] [ Exp ] - -
    (39) Instrucao -> id [ Exp . ] [ Exp ] + +
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 92
    +               shift and go to state 67
    -               shift and go to state 68


state 67

    (69) Exp -> Exp + . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Termo                          shift and go to state 93
    Fator                          shift and go to state 45

state 68

    (70) Exp -> Exp - . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Termo                          shift and go to state 94
    Fator                          shift and go to state 45

state 69

    (72) Termo -> Termo * . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Fator                          shift and go to state 95

state 70

    (73) Termo -> Termo / . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Fator                          shift and go to state 96

state 71

    (74) Termo -> Termo % . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Fator                          shift and go to state 97

state 72

    (76) Fator -> ( Exp . )
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    )               shift and go to state 98
    +               shift and go to state 67
    -               shift and go to state 68


state 73

    (79) Fator -> id [ . Exp ]
    (80) Fator -> id [ . Exp ] [ Exp ]
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 99
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 74

    (41) Instrucao -> read id [ . Exp ]
    (42) Instrucao -> read id [ . Exp ] [ Exp ]
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 100
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 75

    (43) Instrucao -> if Condicao Then . Else
    (44) Instrucao -> if Condicao Then .
    (47) Else -> . else { Instrucoes }
    (48) Else -> . else Instrucao

  ! shift/reduce conflict for else resolved as shift
    END             reduce using rule 44 (Instrucao -> if Condicao Then .)
    id              reduce using rule 44 (Instrucao -> if Condicao Then .)
    print           reduce using rule 44 (Instrucao -> if Condicao Then .)
    read            reduce using rule 44 (Instrucao -> if Condicao Then .)
    if              reduce using rule 44 (Instrucao -> if Condicao Then .)
    repeat          reduce using rule 44 (Instrucao -> if Condicao Then .)
    while           reduce using rule 44 (Instrucao -> if Condicao Then .)
    until           reduce using rule 44 (Instrucao -> if Condicao Then .)
    }               reduce using rule 44 (Instrucao -> if Condicao Then .)
    else            shift and go to state 102

  ! else            [ reduce using rule 44 (Instrucao -> if Condicao Then .) ]

    Else                           shift and go to state 101

state 76

    (45) Then -> { . Instrucoes }
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    }               reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 103

state 77

    (46) Then -> Instrucao .

    else            reduce using rule 46 (Then -> Instrucao .)
    END             reduce using rule 46 (Then -> Instrucao .)
    id              reduce using rule 46 (Then -> Instrucao .)
    print           reduce using rule 46 (Then -> Instrucao .)
    read            reduce using rule 46 (Then -> Instrucao .)
    if              reduce using rule 46 (Then -> Instrucao .)
    repeat          reduce using rule 46 (Then -> Instrucao .)
    while           reduce using rule 46 (Then -> Instrucao .)
    until           reduce using rule 46 (Then -> Instrucao .)
    }               reduce using rule 46 (Then -> Instrucao .)


state 78

    (55) Cond3 -> ( . Cond )
    (76) Fator -> ( . Exp )
    (50) Cond -> . Cond | | Cond2
    (51) Cond -> . Cond2
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (52) Cond2 -> . Cond2 & & Cond3
    (53) Cond2 -> . Cond3
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (54) Cond3 -> . ! Cond
    (55) Cond3 -> . ( Cond )
    (56) Cond3 -> . ExpRel
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]
    (57) ExpRel -> . Exp Oper Exp
    (58) ExpRel -> . Exp

    !               shift and go to state 82
    (               shift and go to state 78
    num             shift and go to state 47
    id              shift and go to state 48

    Cond                           shift and go to state 104
    Exp                            shift and go to state 105
    Cond2                          shift and go to state 80
    Termo                          shift and go to state 44
    Cond3                          shift and go to state 81
    Fator                          shift and go to state 45
    ExpRel                         shift and go to state 83

state 79

    (49) Condicao -> ( Cond . )
    (50) Cond -> Cond . | | Cond2

    )               shift and go to state 106
    |               shift and go to state 107


state 80

    (51) Cond -> Cond2 .
    (52) Cond2 -> Cond2 . & & Cond3

  ! shift/reduce conflict for & resolved as shift
    )               reduce using rule 51 (Cond -> Cond2 .)
    |               reduce using rule 51 (Cond -> Cond2 .)
    &               shift and go to state 108

  ! &               [ reduce using rule 51 (Cond -> Cond2 .) ]


state 81

    (53) Cond2 -> Cond3 .

    &               reduce using rule 53 (Cond2 -> Cond3 .)
    )               reduce using rule 53 (Cond2 -> Cond3 .)
    |               reduce using rule 53 (Cond2 -> Cond3 .)


state 82

    (54) Cond3 -> ! . Cond
    (50) Cond -> . Cond | | Cond2
    (51) Cond -> . Cond2
    (52) Cond2 -> . Cond2 & & Cond3
    (53) Cond2 -> . Cond3
    (54) Cond3 -> . ! Cond
    (55) Cond3 -> . ( Cond )
    (56) Cond3 -> . ExpRel
    (57) ExpRel -> . Exp Oper Exp
    (58) ExpRel -> . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    !               shift and go to state 82
    (               shift and go to state 78
    num             shift and go to state 47
    id              shift and go to state 48

    Cond                           shift and go to state 109
    Cond2                          shift and go to state 80
    Cond3                          shift and go to state 81
    ExpRel                         shift and go to state 83
    Exp                            shift and go to state 84
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 83

    (56) Cond3 -> ExpRel .

    &               reduce using rule 56 (Cond3 -> ExpRel .)
    )               reduce using rule 56 (Cond3 -> ExpRel .)
    |               reduce using rule 56 (Cond3 -> ExpRel .)


state 84

    (57) ExpRel -> Exp . Oper Exp
    (58) ExpRel -> Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo
    (59) Oper -> . = =
    (60) Oper -> . < >
    (61) Oper -> . >
    (62) Oper -> . <
    (63) Oper -> . > =
    (64) Oper -> . < =

    &               reduce using rule 58 (ExpRel -> Exp .)
    )               reduce using rule 58 (ExpRel -> Exp .)
    |               reduce using rule 58 (ExpRel -> Exp .)
    +               shift and go to state 67
    -               shift and go to state 68
    =               shift and go to state 111
    <               shift and go to state 112
    >               shift and go to state 113

    Oper                           shift and go to state 110

state 85

    (65) Instrucao -> repeat CorpoCiclo until . Condicao
    (49) Condicao -> . ( Cond )

    (               shift and go to state 51

    Condicao                       shift and go to state 114

state 86

    (66) CorpoCiclo -> { Instrucoes . }
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    }               shift and go to state 115
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 87

    (68) Instrucao -> while Condicao CorpoCiclo .

    END             reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    id              reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    print           reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    read            reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    if              reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    repeat          reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    while           reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    until           reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    else            reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)
    }               reduce using rule 68 (Instrucao -> while Condicao CorpoCiclo .)


state 88

    (7) DecIntList -> DecIntList , DeclInt .

    ,               reduce using rule 7 (DecIntList -> DecIntList , DeclInt .)
    ENDVARS         reduce using rule 7 (DecIntList -> DecIntList , DeclInt .)
    int             reduce using rule 7 (DecIntList -> DecIntList , DeclInt .)


state 89

    (10) DeclInt -> id = num .

    ,               reduce using rule 10 (DeclInt -> id = num .)
    ENDVARS         reduce using rule 10 (DeclInt -> id = num .)
    int             reduce using rule 10 (DeclInt -> id = num .)


state 90

    (11) DeclInt -> id [ num . ]
    (12) DeclInt -> id [ num . ] [ num ]

    ]               shift and go to state 116


state 91

    (26) Instrucao -> id Op = Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    END             reduce using rule 26 (Instrucao -> id Op = Exp .)
    id              reduce using rule 26 (Instrucao -> id Op = Exp .)
    print           reduce using rule 26 (Instrucao -> id Op = Exp .)
    read            reduce using rule 26 (Instrucao -> id Op = Exp .)
    if              reduce using rule 26 (Instrucao -> id Op = Exp .)
    repeat          reduce using rule 26 (Instrucao -> id Op = Exp .)
    while           reduce using rule 26 (Instrucao -> id Op = Exp .)
    until           reduce using rule 26 (Instrucao -> id Op = Exp .)
    else            reduce using rule 26 (Instrucao -> id Op = Exp .)
    }               reduce using rule 26 (Instrucao -> id Op = Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 92

    (34) Instrucao -> id [ Exp ] . = Exp
    (35) Instrucao -> id [ Exp ] . + +
    (36) Instrucao -> id [ Exp ] . - -
    (37) Instrucao -> id [ Exp ] . [ Exp ] = Exp
    (38) Instrucao -> id [ Exp ] . [ Exp ] - -
    (39) Instrucao -> id [ Exp ] . [ Exp ] + +

    =               shift and go to state 118
    +               shift and go to state 119
    -               shift and go to state 120
    [               shift and go to state 117


state 93

    (69) Exp -> Exp + Termo .
    (72) Termo -> Termo . * Fator
    (73) Termo -> Termo . / Fator
    (74) Termo -> Termo . % Fator

    +               reduce using rule 69 (Exp -> Exp + Termo .)
    -               reduce using rule 69 (Exp -> Exp + Termo .)
    END             reduce using rule 69 (Exp -> Exp + Termo .)
    id              reduce using rule 69 (Exp -> Exp + Termo .)
    print           reduce using rule 69 (Exp -> Exp + Termo .)
    read            reduce using rule 69 (Exp -> Exp + Termo .)
    if              reduce using rule 69 (Exp -> Exp + Termo .)
    repeat          reduce using rule 69 (Exp -> Exp + Termo .)
    while           reduce using rule 69 (Exp -> Exp + Termo .)
    until           reduce using rule 69 (Exp -> Exp + Termo .)
    else            reduce using rule 69 (Exp -> Exp + Termo .)
    }               reduce using rule 69 (Exp -> Exp + Termo .)
    ]               reduce using rule 69 (Exp -> Exp + Termo .)
    )               reduce using rule 69 (Exp -> Exp + Termo .)
    =               reduce using rule 69 (Exp -> Exp + Termo .)
    <               reduce using rule 69 (Exp -> Exp + Termo .)
    >               reduce using rule 69 (Exp -> Exp + Termo .)
    &               reduce using rule 69 (Exp -> Exp + Termo .)
    |               reduce using rule 69 (Exp -> Exp + Termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 94

    (70) Exp -> Exp - Termo .
    (72) Termo -> Termo . * Fator
    (73) Termo -> Termo . / Fator
    (74) Termo -> Termo . % Fator

    +               reduce using rule 70 (Exp -> Exp - Termo .)
    -               reduce using rule 70 (Exp -> Exp - Termo .)
    END             reduce using rule 70 (Exp -> Exp - Termo .)
    id              reduce using rule 70 (Exp -> Exp - Termo .)
    print           reduce using rule 70 (Exp -> Exp - Termo .)
    read            reduce using rule 70 (Exp -> Exp - Termo .)
    if              reduce using rule 70 (Exp -> Exp - Termo .)
    repeat          reduce using rule 70 (Exp -> Exp - Termo .)
    while           reduce using rule 70 (Exp -> Exp - Termo .)
    until           reduce using rule 70 (Exp -> Exp - Termo .)
    else            reduce using rule 70 (Exp -> Exp - Termo .)
    }               reduce using rule 70 (Exp -> Exp - Termo .)
    ]               reduce using rule 70 (Exp -> Exp - Termo .)
    )               reduce using rule 70 (Exp -> Exp - Termo .)
    =               reduce using rule 70 (Exp -> Exp - Termo .)
    <               reduce using rule 70 (Exp -> Exp - Termo .)
    >               reduce using rule 70 (Exp -> Exp - Termo .)
    &               reduce using rule 70 (Exp -> Exp - Termo .)
    |               reduce using rule 70 (Exp -> Exp - Termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 95

    (72) Termo -> Termo * Fator .

    *               reduce using rule 72 (Termo -> Termo * Fator .)
    /               reduce using rule 72 (Termo -> Termo * Fator .)
    %               reduce using rule 72 (Termo -> Termo * Fator .)
    +               reduce using rule 72 (Termo -> Termo * Fator .)
    -               reduce using rule 72 (Termo -> Termo * Fator .)
    END             reduce using rule 72 (Termo -> Termo * Fator .)
    id              reduce using rule 72 (Termo -> Termo * Fator .)
    print           reduce using rule 72 (Termo -> Termo * Fator .)
    read            reduce using rule 72 (Termo -> Termo * Fator .)
    if              reduce using rule 72 (Termo -> Termo * Fator .)
    repeat          reduce using rule 72 (Termo -> Termo * Fator .)
    while           reduce using rule 72 (Termo -> Termo * Fator .)
    until           reduce using rule 72 (Termo -> Termo * Fator .)
    else            reduce using rule 72 (Termo -> Termo * Fator .)
    }               reduce using rule 72 (Termo -> Termo * Fator .)
    ]               reduce using rule 72 (Termo -> Termo * Fator .)
    )               reduce using rule 72 (Termo -> Termo * Fator .)
    =               reduce using rule 72 (Termo -> Termo * Fator .)
    <               reduce using rule 72 (Termo -> Termo * Fator .)
    >               reduce using rule 72 (Termo -> Termo * Fator .)
    &               reduce using rule 72 (Termo -> Termo * Fator .)
    |               reduce using rule 72 (Termo -> Termo * Fator .)


state 96

    (73) Termo -> Termo / Fator .

    *               reduce using rule 73 (Termo -> Termo / Fator .)
    /               reduce using rule 73 (Termo -> Termo / Fator .)
    %               reduce using rule 73 (Termo -> Termo / Fator .)
    +               reduce using rule 73 (Termo -> Termo / Fator .)
    -               reduce using rule 73 (Termo -> Termo / Fator .)
    END             reduce using rule 73 (Termo -> Termo / Fator .)
    id              reduce using rule 73 (Termo -> Termo / Fator .)
    print           reduce using rule 73 (Termo -> Termo / Fator .)
    read            reduce using rule 73 (Termo -> Termo / Fator .)
    if              reduce using rule 73 (Termo -> Termo / Fator .)
    repeat          reduce using rule 73 (Termo -> Termo / Fator .)
    while           reduce using rule 73 (Termo -> Termo / Fator .)
    until           reduce using rule 73 (Termo -> Termo / Fator .)
    else            reduce using rule 73 (Termo -> Termo / Fator .)
    }               reduce using rule 73 (Termo -> Termo / Fator .)
    ]               reduce using rule 73 (Termo -> Termo / Fator .)
    )               reduce using rule 73 (Termo -> Termo / Fator .)
    =               reduce using rule 73 (Termo -> Termo / Fator .)
    <               reduce using rule 73 (Termo -> Termo / Fator .)
    >               reduce using rule 73 (Termo -> Termo / Fator .)
    &               reduce using rule 73 (Termo -> Termo / Fator .)
    |               reduce using rule 73 (Termo -> Termo / Fator .)


state 97

    (74) Termo -> Termo % Fator .

    *               reduce using rule 74 (Termo -> Termo % Fator .)
    /               reduce using rule 74 (Termo -> Termo % Fator .)
    %               reduce using rule 74 (Termo -> Termo % Fator .)
    +               reduce using rule 74 (Termo -> Termo % Fator .)
    -               reduce using rule 74 (Termo -> Termo % Fator .)
    END             reduce using rule 74 (Termo -> Termo % Fator .)
    id              reduce using rule 74 (Termo -> Termo % Fator .)
    print           reduce using rule 74 (Termo -> Termo % Fator .)
    read            reduce using rule 74 (Termo -> Termo % Fator .)
    if              reduce using rule 74 (Termo -> Termo % Fator .)
    repeat          reduce using rule 74 (Termo -> Termo % Fator .)
    while           reduce using rule 74 (Termo -> Termo % Fator .)
    until           reduce using rule 74 (Termo -> Termo % Fator .)
    else            reduce using rule 74 (Termo -> Termo % Fator .)
    }               reduce using rule 74 (Termo -> Termo % Fator .)
    ]               reduce using rule 74 (Termo -> Termo % Fator .)
    )               reduce using rule 74 (Termo -> Termo % Fator .)
    =               reduce using rule 74 (Termo -> Termo % Fator .)
    <               reduce using rule 74 (Termo -> Termo % Fator .)
    >               reduce using rule 74 (Termo -> Termo % Fator .)
    &               reduce using rule 74 (Termo -> Termo % Fator .)
    |               reduce using rule 74 (Termo -> Termo % Fator .)


state 98

    (76) Fator -> ( Exp ) .

    *               reduce using rule 76 (Fator -> ( Exp ) .)
    /               reduce using rule 76 (Fator -> ( Exp ) .)
    %               reduce using rule 76 (Fator -> ( Exp ) .)
    +               reduce using rule 76 (Fator -> ( Exp ) .)
    -               reduce using rule 76 (Fator -> ( Exp ) .)
    END             reduce using rule 76 (Fator -> ( Exp ) .)
    id              reduce using rule 76 (Fator -> ( Exp ) .)
    print           reduce using rule 76 (Fator -> ( Exp ) .)
    read            reduce using rule 76 (Fator -> ( Exp ) .)
    if              reduce using rule 76 (Fator -> ( Exp ) .)
    repeat          reduce using rule 76 (Fator -> ( Exp ) .)
    while           reduce using rule 76 (Fator -> ( Exp ) .)
    until           reduce using rule 76 (Fator -> ( Exp ) .)
    else            reduce using rule 76 (Fator -> ( Exp ) .)
    }               reduce using rule 76 (Fator -> ( Exp ) .)
    ]               reduce using rule 76 (Fator -> ( Exp ) .)
    )               reduce using rule 76 (Fator -> ( Exp ) .)
    =               reduce using rule 76 (Fator -> ( Exp ) .)
    <               reduce using rule 76 (Fator -> ( Exp ) .)
    >               reduce using rule 76 (Fator -> ( Exp ) .)
    &               reduce using rule 76 (Fator -> ( Exp ) .)
    |               reduce using rule 76 (Fator -> ( Exp ) .)


state 99

    (79) Fator -> id [ Exp . ]
    (80) Fator -> id [ Exp . ] [ Exp ]
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 121
    +               shift and go to state 67
    -               shift and go to state 68


state 100

    (41) Instrucao -> read id [ Exp . ]
    (42) Instrucao -> read id [ Exp . ] [ Exp ]
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 122
    +               shift and go to state 67
    -               shift and go to state 68


state 101

    (43) Instrucao -> if Condicao Then Else .

    END             reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    id              reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    print           reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    read            reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    if              reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    repeat          reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    while           reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    until           reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    else            reduce using rule 43 (Instrucao -> if Condicao Then Else .)
    }               reduce using rule 43 (Instrucao -> if Condicao Then Else .)


state 102

    (47) Else -> else . { Instrucoes }
    (48) Else -> else . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    {               shift and go to state 123
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 124

state 103

    (45) Then -> { Instrucoes . }
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    }               shift and go to state 125
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 104

    (55) Cond3 -> ( Cond . )
    (50) Cond -> Cond . | | Cond2

    )               shift and go to state 126
    |               shift and go to state 107


state 105

    (76) Fator -> ( Exp . )
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo
    (57) ExpRel -> Exp . Oper Exp
    (58) ExpRel -> Exp .
    (59) Oper -> . = =
    (60) Oper -> . < >
    (61) Oper -> . >
    (62) Oper -> . <
    (63) Oper -> . > =
    (64) Oper -> . < =

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 98
    +               shift and go to state 67
    -               shift and go to state 68
    &               reduce using rule 58 (ExpRel -> Exp .)
    |               reduce using rule 58 (ExpRel -> Exp .)
    =               shift and go to state 111
    <               shift and go to state 112
    >               shift and go to state 113

  ! )               [ reduce using rule 58 (ExpRel -> Exp .) ]

    Oper                           shift and go to state 110

state 106

    (49) Condicao -> ( Cond ) .

    {               reduce using rule 49 (Condicao -> ( Cond ) .)
    id              reduce using rule 49 (Condicao -> ( Cond ) .)
    print           reduce using rule 49 (Condicao -> ( Cond ) .)
    read            reduce using rule 49 (Condicao -> ( Cond ) .)
    if              reduce using rule 49 (Condicao -> ( Cond ) .)
    repeat          reduce using rule 49 (Condicao -> ( Cond ) .)
    while           reduce using rule 49 (Condicao -> ( Cond ) .)
    END             reduce using rule 49 (Condicao -> ( Cond ) .)
    until           reduce using rule 49 (Condicao -> ( Cond ) .)
    else            reduce using rule 49 (Condicao -> ( Cond ) .)
    }               reduce using rule 49 (Condicao -> ( Cond ) .)


state 107

    (50) Cond -> Cond | . | Cond2

    |               shift and go to state 127


state 108

    (52) Cond2 -> Cond2 & . & Cond3

    &               shift and go to state 128


state 109

    (54) Cond3 -> ! Cond .
    (50) Cond -> Cond . | | Cond2

  ! shift/reduce conflict for | resolved as shift
    &               reduce using rule 54 (Cond3 -> ! Cond .)
    )               reduce using rule 54 (Cond3 -> ! Cond .)
    |               shift and go to state 107

  ! |               [ reduce using rule 54 (Cond3 -> ! Cond .) ]


state 110

    (57) ExpRel -> Exp Oper . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 129
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 111

    (59) Oper -> = . =

    =               shift and go to state 130


state 112

    (60) Oper -> < . >
    (62) Oper -> < .
    (64) Oper -> < . =

    >               shift and go to state 131
    (               reduce using rule 62 (Oper -> < .)
    num             reduce using rule 62 (Oper -> < .)
    id              reduce using rule 62 (Oper -> < .)
    =               shift and go to state 132


state 113

    (61) Oper -> > .
    (63) Oper -> > . =

    (               reduce using rule 61 (Oper -> > .)
    num             reduce using rule 61 (Oper -> > .)
    id              reduce using rule 61 (Oper -> > .)
    =               shift and go to state 133


state 114

    (65) Instrucao -> repeat CorpoCiclo until Condicao .

    END             reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    id              reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    print           reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    read            reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    if              reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    repeat          reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    while           reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    until           reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    else            reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)
    }               reduce using rule 65 (Instrucao -> repeat CorpoCiclo until Condicao .)


state 115

    (66) CorpoCiclo -> { Instrucoes } .

    until           reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    else            reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    END             reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    id              reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    print           reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    read            reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    if              reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    repeat          reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    while           reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)
    }               reduce using rule 66 (CorpoCiclo -> { Instrucoes } .)


state 116

    (11) DeclInt -> id [ num ] .
    (12) DeclInt -> id [ num ] . [ num ]

    ,               reduce using rule 11 (DeclInt -> id [ num ] .)
    ENDVARS         reduce using rule 11 (DeclInt -> id [ num ] .)
    int             reduce using rule 11 (DeclInt -> id [ num ] .)
    [               shift and go to state 134


state 117

    (37) Instrucao -> id [ Exp ] [ . Exp ] = Exp
    (38) Instrucao -> id [ Exp ] [ . Exp ] - -
    (39) Instrucao -> id [ Exp ] [ . Exp ] + +
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 135
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 118

    (34) Instrucao -> id [ Exp ] = . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 136
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 119

    (35) Instrucao -> id [ Exp ] + . +

    +               shift and go to state 137


state 120

    (36) Instrucao -> id [ Exp ] - . -

    -               shift and go to state 138


state 121

    (79) Fator -> id [ Exp ] .
    (80) Fator -> id [ Exp ] . [ Exp ]

    *               reduce using rule 79 (Fator -> id [ Exp ] .)
    /               reduce using rule 79 (Fator -> id [ Exp ] .)
    %               reduce using rule 79 (Fator -> id [ Exp ] .)
    +               reduce using rule 79 (Fator -> id [ Exp ] .)
    -               reduce using rule 79 (Fator -> id [ Exp ] .)
    END             reduce using rule 79 (Fator -> id [ Exp ] .)
    id              reduce using rule 79 (Fator -> id [ Exp ] .)
    print           reduce using rule 79 (Fator -> id [ Exp ] .)
    read            reduce using rule 79 (Fator -> id [ Exp ] .)
    if              reduce using rule 79 (Fator -> id [ Exp ] .)
    repeat          reduce using rule 79 (Fator -> id [ Exp ] .)
    while           reduce using rule 79 (Fator -> id [ Exp ] .)
    until           reduce using rule 79 (Fator -> id [ Exp ] .)
    else            reduce using rule 79 (Fator -> id [ Exp ] .)
    }               reduce using rule 79 (Fator -> id [ Exp ] .)
    ]               reduce using rule 79 (Fator -> id [ Exp ] .)
    )               reduce using rule 79 (Fator -> id [ Exp ] .)
    =               reduce using rule 79 (Fator -> id [ Exp ] .)
    <               reduce using rule 79 (Fator -> id [ Exp ] .)
    >               reduce using rule 79 (Fator -> id [ Exp ] .)
    &               reduce using rule 79 (Fator -> id [ Exp ] .)
    |               reduce using rule 79 (Fator -> id [ Exp ] .)
    [               shift and go to state 139


state 122

    (41) Instrucao -> read id [ Exp ] .
    (42) Instrucao -> read id [ Exp ] . [ Exp ]

    END             reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    id              reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    print           reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    read            reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    if              reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    repeat          reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    while           reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    until           reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    else            reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    }               reduce using rule 41 (Instrucao -> read id [ Exp ] .)
    [               shift and go to state 140


state 123

    (47) Else -> else { . Instrucoes }
    (20) Instrucoes -> . Instrucoes Instrucao
    (21) Instrucoes -> .

    }               reduce using rule 21 (Instrucoes -> .)
    id              reduce using rule 21 (Instrucoes -> .)
    print           reduce using rule 21 (Instrucoes -> .)
    read            reduce using rule 21 (Instrucoes -> .)
    if              reduce using rule 21 (Instrucoes -> .)
    repeat          reduce using rule 21 (Instrucoes -> .)
    while           reduce using rule 21 (Instrucoes -> .)

    Instrucoes                     shift and go to state 141

state 124

    (48) Else -> else Instrucao .

    else            reduce using rule 48 (Else -> else Instrucao .)
    END             reduce using rule 48 (Else -> else Instrucao .)
    id              reduce using rule 48 (Else -> else Instrucao .)
    print           reduce using rule 48 (Else -> else Instrucao .)
    read            reduce using rule 48 (Else -> else Instrucao .)
    if              reduce using rule 48 (Else -> else Instrucao .)
    repeat          reduce using rule 48 (Else -> else Instrucao .)
    while           reduce using rule 48 (Else -> else Instrucao .)
    until           reduce using rule 48 (Else -> else Instrucao .)
    }               reduce using rule 48 (Else -> else Instrucao .)


state 125

    (45) Then -> { Instrucoes } .

    else            reduce using rule 45 (Then -> { Instrucoes } .)
    END             reduce using rule 45 (Then -> { Instrucoes } .)
    id              reduce using rule 45 (Then -> { Instrucoes } .)
    print           reduce using rule 45 (Then -> { Instrucoes } .)
    read            reduce using rule 45 (Then -> { Instrucoes } .)
    if              reduce using rule 45 (Then -> { Instrucoes } .)
    repeat          reduce using rule 45 (Then -> { Instrucoes } .)
    while           reduce using rule 45 (Then -> { Instrucoes } .)
    until           reduce using rule 45 (Then -> { Instrucoes } .)
    }               reduce using rule 45 (Then -> { Instrucoes } .)


state 126

    (55) Cond3 -> ( Cond ) .

    &               reduce using rule 55 (Cond3 -> ( Cond ) .)
    )               reduce using rule 55 (Cond3 -> ( Cond ) .)
    |               reduce using rule 55 (Cond3 -> ( Cond ) .)


state 127

    (50) Cond -> Cond | | . Cond2
    (52) Cond2 -> . Cond2 & & Cond3
    (53) Cond2 -> . Cond3
    (54) Cond3 -> . ! Cond
    (55) Cond3 -> . ( Cond )
    (56) Cond3 -> . ExpRel
    (57) ExpRel -> . Exp Oper Exp
    (58) ExpRel -> . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    !               shift and go to state 82
    (               shift and go to state 78
    num             shift and go to state 47
    id              shift and go to state 48

    Cond2                          shift and go to state 142
    Cond3                          shift and go to state 81
    ExpRel                         shift and go to state 83
    Exp                            shift and go to state 84
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 128

    (52) Cond2 -> Cond2 & & . Cond3
    (54) Cond3 -> . ! Cond
    (55) Cond3 -> . ( Cond )
    (56) Cond3 -> . ExpRel
    (57) ExpRel -> . Exp Oper Exp
    (58) ExpRel -> . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    !               shift and go to state 82
    (               shift and go to state 78
    num             shift and go to state 47
    id              shift and go to state 48

    Cond3                          shift and go to state 143
    ExpRel                         shift and go to state 83
    Exp                            shift and go to state 84
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 129

    (57) ExpRel -> Exp Oper Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    &               reduce using rule 57 (ExpRel -> Exp Oper Exp .)
    )               reduce using rule 57 (ExpRel -> Exp Oper Exp .)
    |               reduce using rule 57 (ExpRel -> Exp Oper Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 130

    (59) Oper -> = = .

    (               reduce using rule 59 (Oper -> = = .)
    num             reduce using rule 59 (Oper -> = = .)
    id              reduce using rule 59 (Oper -> = = .)


state 131

    (60) Oper -> < > .

    (               reduce using rule 60 (Oper -> < > .)
    num             reduce using rule 60 (Oper -> < > .)
    id              reduce using rule 60 (Oper -> < > .)


state 132

    (64) Oper -> < = .

    (               reduce using rule 64 (Oper -> < = .)
    num             reduce using rule 64 (Oper -> < = .)
    id              reduce using rule 64 (Oper -> < = .)


state 133

    (63) Oper -> > = .

    (               reduce using rule 63 (Oper -> > = .)
    num             reduce using rule 63 (Oper -> > = .)
    id              reduce using rule 63 (Oper -> > = .)


state 134

    (12) DeclInt -> id [ num ] [ . num ]

    num             shift and go to state 144


state 135

    (37) Instrucao -> id [ Exp ] [ Exp . ] = Exp
    (38) Instrucao -> id [ Exp ] [ Exp . ] - -
    (39) Instrucao -> id [ Exp ] [ Exp . ] + +
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 145
    +               shift and go to state 67
    -               shift and go to state 68


state 136

    (34) Instrucao -> id [ Exp ] = Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    END             reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    id              reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    print           reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    read            reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    if              reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    repeat          reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    while           reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    until           reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    else            reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    }               reduce using rule 34 (Instrucao -> id [ Exp ] = Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 137

    (35) Instrucao -> id [ Exp ] + + .

    END             reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    id              reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    print           reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    read            reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    if              reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    repeat          reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    while           reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    until           reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    else            reduce using rule 35 (Instrucao -> id [ Exp ] + + .)
    }               reduce using rule 35 (Instrucao -> id [ Exp ] + + .)


state 138

    (36) Instrucao -> id [ Exp ] - - .

    END             reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    id              reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    print           reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    read            reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    if              reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    repeat          reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    while           reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    until           reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    else            reduce using rule 36 (Instrucao -> id [ Exp ] - - .)
    }               reduce using rule 36 (Instrucao -> id [ Exp ] - - .)


state 139

    (80) Fator -> id [ Exp ] [ . Exp ]
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 146
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 140

    (42) Instrucao -> read id [ Exp ] [ . Exp ]
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 147
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 141

    (47) Else -> else { Instrucoes . }
    (20) Instrucoes -> Instrucoes . Instrucao
    (22) Instrucao -> . id ( )
    (23) Instrucao -> . print str
    (24) Instrucao -> . print Exp
    (25) Instrucao -> . id = Exp
    (26) Instrucao -> . id Op = Exp
    (32) Instrucao -> . id - -
    (33) Instrucao -> . id + +
    (34) Instrucao -> . id [ Exp ] = Exp
    (35) Instrucao -> . id [ Exp ] + +
    (36) Instrucao -> . id [ Exp ] - -
    (37) Instrucao -> . id [ Exp ] [ Exp ] = Exp
    (38) Instrucao -> . id [ Exp ] [ Exp ] - -
    (39) Instrucao -> . id [ Exp ] [ Exp ] + +
    (40) Instrucao -> . read id
    (41) Instrucao -> . read id [ Exp ]
    (42) Instrucao -> . read id [ Exp ] [ Exp ]
    (43) Instrucao -> . if Condicao Then Else
    (44) Instrucao -> . if Condicao Then
    (65) Instrucao -> . repeat CorpoCiclo until Condicao
    (68) Instrucao -> . while Condicao CorpoCiclo

    }               shift and go to state 148
    id              shift and go to state 22
    print           shift and go to state 23
    read            shift and go to state 24
    if              shift and go to state 25
    repeat          shift and go to state 26
    while           shift and go to state 27

    Instrucao                      shift and go to state 21

state 142

    (50) Cond -> Cond | | Cond2 .
    (52) Cond2 -> Cond2 . & & Cond3

  ! shift/reduce conflict for & resolved as shift
    )               reduce using rule 50 (Cond -> Cond | | Cond2 .)
    |               reduce using rule 50 (Cond -> Cond | | Cond2 .)
    &               shift and go to state 108

  ! &               [ reduce using rule 50 (Cond -> Cond | | Cond2 .) ]


state 143

    (52) Cond2 -> Cond2 & & Cond3 .

    &               reduce using rule 52 (Cond2 -> Cond2 & & Cond3 .)
    )               reduce using rule 52 (Cond2 -> Cond2 & & Cond3 .)
    |               reduce using rule 52 (Cond2 -> Cond2 & & Cond3 .)


state 144

    (12) DeclInt -> id [ num ] [ num . ]

    ]               shift and go to state 149


state 145

    (37) Instrucao -> id [ Exp ] [ Exp ] . = Exp
    (38) Instrucao -> id [ Exp ] [ Exp ] . - -
    (39) Instrucao -> id [ Exp ] [ Exp ] . + +

    =               shift and go to state 150
    -               shift and go to state 151
    +               shift and go to state 152


state 146

    (80) Fator -> id [ Exp ] [ Exp . ]
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 153
    +               shift and go to state 67
    -               shift and go to state 68


state 147

    (42) Instrucao -> read id [ Exp ] [ Exp . ]
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    ]               shift and go to state 154
    +               shift and go to state 67
    -               shift and go to state 68


state 148

    (47) Else -> else { Instrucoes } .

    else            reduce using rule 47 (Else -> else { Instrucoes } .)
    END             reduce using rule 47 (Else -> else { Instrucoes } .)
    id              reduce using rule 47 (Else -> else { Instrucoes } .)
    print           reduce using rule 47 (Else -> else { Instrucoes } .)
    read            reduce using rule 47 (Else -> else { Instrucoes } .)
    if              reduce using rule 47 (Else -> else { Instrucoes } .)
    repeat          reduce using rule 47 (Else -> else { Instrucoes } .)
    while           reduce using rule 47 (Else -> else { Instrucoes } .)
    until           reduce using rule 47 (Else -> else { Instrucoes } .)
    }               reduce using rule 47 (Else -> else { Instrucoes } .)


state 149

    (12) DeclInt -> id [ num ] [ num ] .

    ,               reduce using rule 12 (DeclInt -> id [ num ] [ num ] .)
    ENDVARS         reduce using rule 12 (DeclInt -> id [ num ] [ num ] .)
    int             reduce using rule 12 (DeclInt -> id [ num ] [ num ] .)


state 150

    (37) Instrucao -> id [ Exp ] [ Exp ] = . Exp
    (69) Exp -> . Exp + Termo
    (70) Exp -> . Exp - Termo
    (71) Exp -> . Termo
    (72) Termo -> . Termo * Fator
    (73) Termo -> . Termo / Fator
    (74) Termo -> . Termo % Fator
    (75) Termo -> . Fator
    (76) Fator -> . ( Exp )
    (77) Fator -> . num
    (78) Fator -> . id
    (79) Fator -> . id [ Exp ]
    (80) Fator -> . id [ Exp ] [ Exp ]

    (               shift and go to state 46
    num             shift and go to state 47
    id              shift and go to state 48

    Exp                            shift and go to state 155
    Termo                          shift and go to state 44
    Fator                          shift and go to state 45

state 151

    (38) Instrucao -> id [ Exp ] [ Exp ] - . -

    -               shift and go to state 156


state 152

    (39) Instrucao -> id [ Exp ] [ Exp ] + . +

    +               shift and go to state 157


state 153

    (80) Fator -> id [ Exp ] [ Exp ] .

    *               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    /               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    %               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    +               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    -               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    END             reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    id              reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    print           reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    read            reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    if              reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    repeat          reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    while           reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    until           reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    else            reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    }               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    ]               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    )               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    =               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    <               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    >               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    &               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)
    |               reduce using rule 80 (Fator -> id [ Exp ] [ Exp ] .)


state 154

    (42) Instrucao -> read id [ Exp ] [ Exp ] .

    END             reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    id              reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    print           reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    read            reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    if              reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    repeat          reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    while           reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    until           reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    else            reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)
    }               reduce using rule 42 (Instrucao -> read id [ Exp ] [ Exp ] .)


state 155

    (37) Instrucao -> id [ Exp ] [ Exp ] = Exp .
    (69) Exp -> Exp . + Termo
    (70) Exp -> Exp . - Termo

    END             reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    id              reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    print           reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    read            reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    if              reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    repeat          reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    while           reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    until           reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    else            reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    }               reduce using rule 37 (Instrucao -> id [ Exp ] [ Exp ] = Exp .)
    +               shift and go to state 67
    -               shift and go to state 68


state 156

    (38) Instrucao -> id [ Exp ] [ Exp ] - - .

    END             reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    id              reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    print           reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    read            reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    if              reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    repeat          reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    while           reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    until           reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    else            reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)
    }               reduce using rule 38 (Instrucao -> id [ Exp ] [ Exp ] - - .)


state 157

    (39) Instrucao -> id [ Exp ] [ Exp ] + + .

    END             reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    id              reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    print           reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    read            reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    if              reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    repeat          reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    while           reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    until           reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    else            reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)
    }               reduce using rule 39 (Instrucao -> id [ Exp ] [ Exp ] + + .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for else in state 75 resolved as shift
WARNING: shift/reduce conflict for & in state 80 resolved as shift
WARNING: shift/reduce conflict for ) in state 105 resolved as shift
WARNING: shift/reduce conflict for | in state 109 resolved as shift
WARNING: shift/reduce conflict for & in state 142 resolved as shift
