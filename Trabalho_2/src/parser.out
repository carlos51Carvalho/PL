Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Progama
Rule 1     Progama -> Declaracoes Corpo
Rule 2     Declaracoes -> VARS Decls ENDVARS
Rule 3     Declaracoes -> <empty>
Rule 4     Decls -> Decl Decls
Rule 5     Decls -> <empty>
Rule 6     Decl -> int DecIntList
Rule 7     DecIntList -> DeclInt RestoDeclInt
Rule 8     RestoDeclInt -> , DecIntList
Rule 9     RestoDeclInt -> <empty>
Rule 10    DeclInt -> id
Rule 11    DeclInt -> id = num
Rule 12    DeclInt -> id [ num ]
Rule 13    Corpo -> BEGIN Instrucoes END
Rule 14    Instrucoes -> Instrucao Instrucoes
Rule 15    Instrucoes -> <empty>
Rule 16    Instrucao -> print str
Rule 17    Instrucao -> print Exp
Rule 18    Instrucao -> id = Exp
Rule 19    Instrucao -> id [ Exp ] = Exp
Rule 20    Instrucao -> read
Rule 21    Instrucao -> read id
Rule 22    Instrucao -> read id [ Exp ]
Rule 23    Instrucao -> if ( Cond ) Then Else
Rule 24    Instrucao -> if ( Cond ) Then
Rule 25    Then -> { Instrucoes }
Rule 26    Then -> Instrucao
Rule 27    Else -> else { Instrucoes }
Rule 28    Else -> else Instrucao
Rule 29    Cond -> Exp Oper Exp
Rule 30    Oper -> = =
Rule 31    Oper -> ! =
Rule 32    Oper -> >
Rule 33    Oper -> <
Rule 34    Oper -> > =
Rule 35    Oper -> < =
Rule 36    Instrucao -> repeat ( num ) CorpoRepeat
Rule 37    CorpoRepeat -> Instrucao
Rule 38    CorpoRepeat -> { Instrucoes }
Rule 39    Exp -> Exp + Termo
Rule 40    Exp -> Exp - Termo
Rule 41    Exp -> Termo
Rule 42    Termo -> Termo * Fator
Rule 43    Termo -> Termo / Fator
Rule 44    Termo -> Termo % Fator
Rule 45    Termo -> Fator
Rule 46    Fator -> ( Exp )
Rule 47    Fator -> num
Rule 48    Fator -> id
Rule 49    Fator -> id [ Exp ]

Terminals, with rules where they appear

!                    : 31
%                    : 44
(                    : 23 24 36 46
)                    : 23 24 36 46
*                    : 42
+                    : 39
,                    : 8
-                    : 40
/                    : 43
<                    : 33 35
=                    : 11 18 19 30 30 31 34 35
>                    : 32 34
BEGIN                : 13
END                  : 13
ENDVARS              : 2
VARS                 : 2
[                    : 12 19 22 49
]                    : 12 19 22 49
else                 : 27 28
error                : 
id                   : 10 11 12 18 19 21 22 48 49
if                   : 23 24
int                  : 6
num                  : 11 12 36 47
print                : 16 17
read                 : 20 21 22
repeat               : 36
str                  : 16
{                    : 25 27 38
}                    : 25 27 38

Nonterminals, with rules where they appear

Cond                 : 23 24
Corpo                : 1
CorpoRepeat          : 36
DecIntList           : 6 8
Decl                 : 4
DeclInt              : 7
Declaracoes          : 1
Decls                : 2 4
Else                 : 23
Exp                  : 17 18 19 19 22 29 29 39 40 46 49
Fator                : 42 43 44 45
Instrucao            : 14 26 28 37
Instrucoes           : 13 14 25 27 38
Oper                 : 29
Progama              : 0
RestoDeclInt         : 7
Termo                : 39 40 41 42 43 44
Then                 : 23 24

Parsing method: LALR

state 0

    (0) S' -> . Progama
    (1) Progama -> . Declaracoes Corpo
    (2) Declaracoes -> . VARS Decls ENDVARS
    (3) Declaracoes -> .

    VARS            shift and go to state 3
    BEGIN           reduce using rule 3 (Declaracoes -> .)

    Progama                        shift and go to state 1
    Declaracoes                    shift and go to state 2

state 1

    (0) S' -> Progama .



state 2

    (1) Progama -> Declaracoes . Corpo
    (13) Corpo -> . BEGIN Instrucoes END

    BEGIN           shift and go to state 5

    Corpo                          shift and go to state 4

state 3

    (2) Declaracoes -> VARS . Decls ENDVARS
    (4) Decls -> . Decl Decls
    (5) Decls -> .
    (6) Decl -> . int DecIntList

    ENDVARS         reduce using rule 5 (Decls -> .)
    int             shift and go to state 8

    Decls                          shift and go to state 6
    Decl                           shift and go to state 7

state 4

    (1) Progama -> Declaracoes Corpo .

    $end            reduce using rule 1 (Progama -> Declaracoes Corpo .)


state 5

    (13) Corpo -> BEGIN . Instrucoes END
    (14) Instrucoes -> . Instrucao Instrucoes
    (15) Instrucoes -> .
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    END             reduce using rule 15 (Instrucoes -> .)
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucoes                     shift and go to state 9
    Instrucao                      shift and go to state 10

state 6

    (2) Declaracoes -> VARS Decls . ENDVARS

    ENDVARS         shift and go to state 16


state 7

    (4) Decls -> Decl . Decls
    (4) Decls -> . Decl Decls
    (5) Decls -> .
    (6) Decl -> . int DecIntList

    ENDVARS         reduce using rule 5 (Decls -> .)
    int             shift and go to state 8

    Decl                           shift and go to state 7
    Decls                          shift and go to state 17

state 8

    (6) Decl -> int . DecIntList
    (7) DecIntList -> . DeclInt RestoDeclInt
    (10) DeclInt -> . id
    (11) DeclInt -> . id = num
    (12) DeclInt -> . id [ num ]

    id              shift and go to state 20

    DecIntList                     shift and go to state 18
    DeclInt                        shift and go to state 19

state 9

    (13) Corpo -> BEGIN Instrucoes . END

    END             shift and go to state 21


state 10

    (14) Instrucoes -> Instrucao . Instrucoes
    (14) Instrucoes -> . Instrucao Instrucoes
    (15) Instrucoes -> .
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    END             reduce using rule 15 (Instrucoes -> .)
    }               reduce using rule 15 (Instrucoes -> .)
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucao                      shift and go to state 10
    Instrucoes                     shift and go to state 22

state 11

    (16) Instrucao -> print . str
    (17) Instrucao -> print . Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    str             shift and go to state 23
    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 24
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 12

    (18) Instrucao -> id . = Exp
    (19) Instrucao -> id . [ Exp ] = Exp

    =               shift and go to state 30
    [               shift and go to state 31


state 13

    (20) Instrucao -> read .
    (21) Instrucao -> read . id
    (22) Instrucao -> read . id [ Exp ]

  ! shift/reduce conflict for id resolved as shift
    print           reduce using rule 20 (Instrucao -> read .)
    read            reduce using rule 20 (Instrucao -> read .)
    if              reduce using rule 20 (Instrucao -> read .)
    repeat          reduce using rule 20 (Instrucao -> read .)
    END             reduce using rule 20 (Instrucao -> read .)
    }               reduce using rule 20 (Instrucao -> read .)
    else            reduce using rule 20 (Instrucao -> read .)
    id              shift and go to state 32

  ! id              [ reduce using rule 20 (Instrucao -> read .) ]


state 14

    (23) Instrucao -> if . ( Cond ) Then Else
    (24) Instrucao -> if . ( Cond ) Then

    (               shift and go to state 33


state 15

    (36) Instrucao -> repeat . ( num ) CorpoRepeat

    (               shift and go to state 34


state 16

    (2) Declaracoes -> VARS Decls ENDVARS .

    BEGIN           reduce using rule 2 (Declaracoes -> VARS Decls ENDVARS .)


state 17

    (4) Decls -> Decl Decls .

    ENDVARS         reduce using rule 4 (Decls -> Decl Decls .)


state 18

    (6) Decl -> int DecIntList .

    int             reduce using rule 6 (Decl -> int DecIntList .)
    ENDVARS         reduce using rule 6 (Decl -> int DecIntList .)


state 19

    (7) DecIntList -> DeclInt . RestoDeclInt
    (8) RestoDeclInt -> . , DecIntList
    (9) RestoDeclInt -> .

    ,               shift and go to state 36
    int             reduce using rule 9 (RestoDeclInt -> .)
    ENDVARS         reduce using rule 9 (RestoDeclInt -> .)

    RestoDeclInt                   shift and go to state 35

state 20

    (10) DeclInt -> id .
    (11) DeclInt -> id . = num
    (12) DeclInt -> id . [ num ]

    ,               reduce using rule 10 (DeclInt -> id .)
    int             reduce using rule 10 (DeclInt -> id .)
    ENDVARS         reduce using rule 10 (DeclInt -> id .)
    =               shift and go to state 37
    [               shift and go to state 38


state 21

    (13) Corpo -> BEGIN Instrucoes END .

    $end            reduce using rule 13 (Corpo -> BEGIN Instrucoes END .)


state 22

    (14) Instrucoes -> Instrucao Instrucoes .

    END             reduce using rule 14 (Instrucoes -> Instrucao Instrucoes .)
    }               reduce using rule 14 (Instrucoes -> Instrucao Instrucoes .)


state 23

    (16) Instrucao -> print str .

    print           reduce using rule 16 (Instrucao -> print str .)
    id              reduce using rule 16 (Instrucao -> print str .)
    read            reduce using rule 16 (Instrucao -> print str .)
    if              reduce using rule 16 (Instrucao -> print str .)
    repeat          reduce using rule 16 (Instrucao -> print str .)
    END             reduce using rule 16 (Instrucao -> print str .)
    }               reduce using rule 16 (Instrucao -> print str .)
    else            reduce using rule 16 (Instrucao -> print str .)


state 24

    (17) Instrucao -> print Exp .
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    print           reduce using rule 17 (Instrucao -> print Exp .)
    id              reduce using rule 17 (Instrucao -> print Exp .)
    read            reduce using rule 17 (Instrucao -> print Exp .)
    if              reduce using rule 17 (Instrucao -> print Exp .)
    repeat          reduce using rule 17 (Instrucao -> print Exp .)
    END             reduce using rule 17 (Instrucao -> print Exp .)
    }               reduce using rule 17 (Instrucao -> print Exp .)
    else            reduce using rule 17 (Instrucao -> print Exp .)
    +               shift and go to state 39
    -               shift and go to state 40


state 25

    (41) Exp -> Termo .
    (42) Termo -> Termo . * Fator
    (43) Termo -> Termo . / Fator
    (44) Termo -> Termo . % Fator

    +               reduce using rule 41 (Exp -> Termo .)
    -               reduce using rule 41 (Exp -> Termo .)
    print           reduce using rule 41 (Exp -> Termo .)
    id              reduce using rule 41 (Exp -> Termo .)
    read            reduce using rule 41 (Exp -> Termo .)
    if              reduce using rule 41 (Exp -> Termo .)
    repeat          reduce using rule 41 (Exp -> Termo .)
    END             reduce using rule 41 (Exp -> Termo .)
    }               reduce using rule 41 (Exp -> Termo .)
    else            reduce using rule 41 (Exp -> Termo .)
    )               reduce using rule 41 (Exp -> Termo .)
    ]               reduce using rule 41 (Exp -> Termo .)
    =               reduce using rule 41 (Exp -> Termo .)
    !               reduce using rule 41 (Exp -> Termo .)
    >               reduce using rule 41 (Exp -> Termo .)
    <               reduce using rule 41 (Exp -> Termo .)
    *               shift and go to state 41
    /               shift and go to state 42
    %               shift and go to state 43


state 26

    (45) Termo -> Fator .

    *               reduce using rule 45 (Termo -> Fator .)
    /               reduce using rule 45 (Termo -> Fator .)
    %               reduce using rule 45 (Termo -> Fator .)
    +               reduce using rule 45 (Termo -> Fator .)
    -               reduce using rule 45 (Termo -> Fator .)
    print           reduce using rule 45 (Termo -> Fator .)
    id              reduce using rule 45 (Termo -> Fator .)
    read            reduce using rule 45 (Termo -> Fator .)
    if              reduce using rule 45 (Termo -> Fator .)
    repeat          reduce using rule 45 (Termo -> Fator .)
    END             reduce using rule 45 (Termo -> Fator .)
    }               reduce using rule 45 (Termo -> Fator .)
    else            reduce using rule 45 (Termo -> Fator .)
    )               reduce using rule 45 (Termo -> Fator .)
    ]               reduce using rule 45 (Termo -> Fator .)
    =               reduce using rule 45 (Termo -> Fator .)
    !               reduce using rule 45 (Termo -> Fator .)
    >               reduce using rule 45 (Termo -> Fator .)
    <               reduce using rule 45 (Termo -> Fator .)


state 27

    (46) Fator -> ( . Exp )
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 44
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 28

    (47) Fator -> num .

    *               reduce using rule 47 (Fator -> num .)
    /               reduce using rule 47 (Fator -> num .)
    %               reduce using rule 47 (Fator -> num .)
    +               reduce using rule 47 (Fator -> num .)
    -               reduce using rule 47 (Fator -> num .)
    print           reduce using rule 47 (Fator -> num .)
    id              reduce using rule 47 (Fator -> num .)
    read            reduce using rule 47 (Fator -> num .)
    if              reduce using rule 47 (Fator -> num .)
    repeat          reduce using rule 47 (Fator -> num .)
    END             reduce using rule 47 (Fator -> num .)
    }               reduce using rule 47 (Fator -> num .)
    else            reduce using rule 47 (Fator -> num .)
    )               reduce using rule 47 (Fator -> num .)
    ]               reduce using rule 47 (Fator -> num .)
    =               reduce using rule 47 (Fator -> num .)
    !               reduce using rule 47 (Fator -> num .)
    >               reduce using rule 47 (Fator -> num .)
    <               reduce using rule 47 (Fator -> num .)


state 29

    (48) Fator -> id .
    (49) Fator -> id . [ Exp ]

    *               reduce using rule 48 (Fator -> id .)
    /               reduce using rule 48 (Fator -> id .)
    %               reduce using rule 48 (Fator -> id .)
    +               reduce using rule 48 (Fator -> id .)
    -               reduce using rule 48 (Fator -> id .)
    print           reduce using rule 48 (Fator -> id .)
    id              reduce using rule 48 (Fator -> id .)
    read            reduce using rule 48 (Fator -> id .)
    if              reduce using rule 48 (Fator -> id .)
    repeat          reduce using rule 48 (Fator -> id .)
    END             reduce using rule 48 (Fator -> id .)
    }               reduce using rule 48 (Fator -> id .)
    else            reduce using rule 48 (Fator -> id .)
    )               reduce using rule 48 (Fator -> id .)
    ]               reduce using rule 48 (Fator -> id .)
    =               reduce using rule 48 (Fator -> id .)
    !               reduce using rule 48 (Fator -> id .)
    >               reduce using rule 48 (Fator -> id .)
    <               reduce using rule 48 (Fator -> id .)
    [               shift and go to state 45


state 30

    (18) Instrucao -> id = . Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 46
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 31

    (19) Instrucao -> id [ . Exp ] = Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 47
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 32

    (21) Instrucao -> read id .
    (22) Instrucao -> read id . [ Exp ]

    print           reduce using rule 21 (Instrucao -> read id .)
    id              reduce using rule 21 (Instrucao -> read id .)
    read            reduce using rule 21 (Instrucao -> read id .)
    if              reduce using rule 21 (Instrucao -> read id .)
    repeat          reduce using rule 21 (Instrucao -> read id .)
    END             reduce using rule 21 (Instrucao -> read id .)
    }               reduce using rule 21 (Instrucao -> read id .)
    else            reduce using rule 21 (Instrucao -> read id .)
    [               shift and go to state 48


state 33

    (23) Instrucao -> if ( . Cond ) Then Else
    (24) Instrucao -> if ( . Cond ) Then
    (29) Cond -> . Exp Oper Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Cond                           shift and go to state 49
    Exp                            shift and go to state 50
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 34

    (36) Instrucao -> repeat ( . num ) CorpoRepeat

    num             shift and go to state 51


state 35

    (7) DecIntList -> DeclInt RestoDeclInt .

    int             reduce using rule 7 (DecIntList -> DeclInt RestoDeclInt .)
    ENDVARS         reduce using rule 7 (DecIntList -> DeclInt RestoDeclInt .)


state 36

    (8) RestoDeclInt -> , . DecIntList
    (7) DecIntList -> . DeclInt RestoDeclInt
    (10) DeclInt -> . id
    (11) DeclInt -> . id = num
    (12) DeclInt -> . id [ num ]

    id              shift and go to state 20

    DecIntList                     shift and go to state 52
    DeclInt                        shift and go to state 19

state 37

    (11) DeclInt -> id = . num

    num             shift and go to state 53


state 38

    (12) DeclInt -> id [ . num ]

    num             shift and go to state 54


state 39

    (39) Exp -> Exp + . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Termo                          shift and go to state 55
    Fator                          shift and go to state 26

state 40

    (40) Exp -> Exp - . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Termo                          shift and go to state 56
    Fator                          shift and go to state 26

state 41

    (42) Termo -> Termo * . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Fator                          shift and go to state 57

state 42

    (43) Termo -> Termo / . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Fator                          shift and go to state 58

state 43

    (44) Termo -> Termo % . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Fator                          shift and go to state 59

state 44

    (46) Fator -> ( Exp . )
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    )               shift and go to state 60
    +               shift and go to state 39
    -               shift and go to state 40


state 45

    (49) Fator -> id [ . Exp ]
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 61
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 46

    (18) Instrucao -> id = Exp .
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    print           reduce using rule 18 (Instrucao -> id = Exp .)
    id              reduce using rule 18 (Instrucao -> id = Exp .)
    read            reduce using rule 18 (Instrucao -> id = Exp .)
    if              reduce using rule 18 (Instrucao -> id = Exp .)
    repeat          reduce using rule 18 (Instrucao -> id = Exp .)
    END             reduce using rule 18 (Instrucao -> id = Exp .)
    }               reduce using rule 18 (Instrucao -> id = Exp .)
    else            reduce using rule 18 (Instrucao -> id = Exp .)
    +               shift and go to state 39
    -               shift and go to state 40


state 47

    (19) Instrucao -> id [ Exp . ] = Exp
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    ]               shift and go to state 62
    +               shift and go to state 39
    -               shift and go to state 40


state 48

    (22) Instrucao -> read id [ . Exp ]
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 63
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 49

    (23) Instrucao -> if ( Cond . ) Then Else
    (24) Instrucao -> if ( Cond . ) Then

    )               shift and go to state 64


state 50

    (29) Cond -> Exp . Oper Exp
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo
    (30) Oper -> . = =
    (31) Oper -> . ! =
    (32) Oper -> . >
    (33) Oper -> . <
    (34) Oper -> . > =
    (35) Oper -> . < =

    +               shift and go to state 39
    -               shift and go to state 40
    =               shift and go to state 66
    !               shift and go to state 67
    >               shift and go to state 68
    <               shift and go to state 69

    Oper                           shift and go to state 65

state 51

    (36) Instrucao -> repeat ( num . ) CorpoRepeat

    )               shift and go to state 70


state 52

    (8) RestoDeclInt -> , DecIntList .

    int             reduce using rule 8 (RestoDeclInt -> , DecIntList .)
    ENDVARS         reduce using rule 8 (RestoDeclInt -> , DecIntList .)


state 53

    (11) DeclInt -> id = num .

    ,               reduce using rule 11 (DeclInt -> id = num .)
    int             reduce using rule 11 (DeclInt -> id = num .)
    ENDVARS         reduce using rule 11 (DeclInt -> id = num .)


state 54

    (12) DeclInt -> id [ num . ]

    ]               shift and go to state 71


state 55

    (39) Exp -> Exp + Termo .
    (42) Termo -> Termo . * Fator
    (43) Termo -> Termo . / Fator
    (44) Termo -> Termo . % Fator

    +               reduce using rule 39 (Exp -> Exp + Termo .)
    -               reduce using rule 39 (Exp -> Exp + Termo .)
    print           reduce using rule 39 (Exp -> Exp + Termo .)
    id              reduce using rule 39 (Exp -> Exp + Termo .)
    read            reduce using rule 39 (Exp -> Exp + Termo .)
    if              reduce using rule 39 (Exp -> Exp + Termo .)
    repeat          reduce using rule 39 (Exp -> Exp + Termo .)
    END             reduce using rule 39 (Exp -> Exp + Termo .)
    }               reduce using rule 39 (Exp -> Exp + Termo .)
    else            reduce using rule 39 (Exp -> Exp + Termo .)
    )               reduce using rule 39 (Exp -> Exp + Termo .)
    ]               reduce using rule 39 (Exp -> Exp + Termo .)
    =               reduce using rule 39 (Exp -> Exp + Termo .)
    !               reduce using rule 39 (Exp -> Exp + Termo .)
    >               reduce using rule 39 (Exp -> Exp + Termo .)
    <               reduce using rule 39 (Exp -> Exp + Termo .)
    *               shift and go to state 41
    /               shift and go to state 42
    %               shift and go to state 43


state 56

    (40) Exp -> Exp - Termo .
    (42) Termo -> Termo . * Fator
    (43) Termo -> Termo . / Fator
    (44) Termo -> Termo . % Fator

    +               reduce using rule 40 (Exp -> Exp - Termo .)
    -               reduce using rule 40 (Exp -> Exp - Termo .)
    print           reduce using rule 40 (Exp -> Exp - Termo .)
    id              reduce using rule 40 (Exp -> Exp - Termo .)
    read            reduce using rule 40 (Exp -> Exp - Termo .)
    if              reduce using rule 40 (Exp -> Exp - Termo .)
    repeat          reduce using rule 40 (Exp -> Exp - Termo .)
    END             reduce using rule 40 (Exp -> Exp - Termo .)
    }               reduce using rule 40 (Exp -> Exp - Termo .)
    else            reduce using rule 40 (Exp -> Exp - Termo .)
    )               reduce using rule 40 (Exp -> Exp - Termo .)
    ]               reduce using rule 40 (Exp -> Exp - Termo .)
    =               reduce using rule 40 (Exp -> Exp - Termo .)
    !               reduce using rule 40 (Exp -> Exp - Termo .)
    >               reduce using rule 40 (Exp -> Exp - Termo .)
    <               reduce using rule 40 (Exp -> Exp - Termo .)
    *               shift and go to state 41
    /               shift and go to state 42
    %               shift and go to state 43


state 57

    (42) Termo -> Termo * Fator .

    *               reduce using rule 42 (Termo -> Termo * Fator .)
    /               reduce using rule 42 (Termo -> Termo * Fator .)
    %               reduce using rule 42 (Termo -> Termo * Fator .)
    +               reduce using rule 42 (Termo -> Termo * Fator .)
    -               reduce using rule 42 (Termo -> Termo * Fator .)
    print           reduce using rule 42 (Termo -> Termo * Fator .)
    id              reduce using rule 42 (Termo -> Termo * Fator .)
    read            reduce using rule 42 (Termo -> Termo * Fator .)
    if              reduce using rule 42 (Termo -> Termo * Fator .)
    repeat          reduce using rule 42 (Termo -> Termo * Fator .)
    END             reduce using rule 42 (Termo -> Termo * Fator .)
    }               reduce using rule 42 (Termo -> Termo * Fator .)
    else            reduce using rule 42 (Termo -> Termo * Fator .)
    )               reduce using rule 42 (Termo -> Termo * Fator .)
    ]               reduce using rule 42 (Termo -> Termo * Fator .)
    =               reduce using rule 42 (Termo -> Termo * Fator .)
    !               reduce using rule 42 (Termo -> Termo * Fator .)
    >               reduce using rule 42 (Termo -> Termo * Fator .)
    <               reduce using rule 42 (Termo -> Termo * Fator .)


state 58

    (43) Termo -> Termo / Fator .

    *               reduce using rule 43 (Termo -> Termo / Fator .)
    /               reduce using rule 43 (Termo -> Termo / Fator .)
    %               reduce using rule 43 (Termo -> Termo / Fator .)
    +               reduce using rule 43 (Termo -> Termo / Fator .)
    -               reduce using rule 43 (Termo -> Termo / Fator .)
    print           reduce using rule 43 (Termo -> Termo / Fator .)
    id              reduce using rule 43 (Termo -> Termo / Fator .)
    read            reduce using rule 43 (Termo -> Termo / Fator .)
    if              reduce using rule 43 (Termo -> Termo / Fator .)
    repeat          reduce using rule 43 (Termo -> Termo / Fator .)
    END             reduce using rule 43 (Termo -> Termo / Fator .)
    }               reduce using rule 43 (Termo -> Termo / Fator .)
    else            reduce using rule 43 (Termo -> Termo / Fator .)
    )               reduce using rule 43 (Termo -> Termo / Fator .)
    ]               reduce using rule 43 (Termo -> Termo / Fator .)
    =               reduce using rule 43 (Termo -> Termo / Fator .)
    !               reduce using rule 43 (Termo -> Termo / Fator .)
    >               reduce using rule 43 (Termo -> Termo / Fator .)
    <               reduce using rule 43 (Termo -> Termo / Fator .)


state 59

    (44) Termo -> Termo % Fator .

    *               reduce using rule 44 (Termo -> Termo % Fator .)
    /               reduce using rule 44 (Termo -> Termo % Fator .)
    %               reduce using rule 44 (Termo -> Termo % Fator .)
    +               reduce using rule 44 (Termo -> Termo % Fator .)
    -               reduce using rule 44 (Termo -> Termo % Fator .)
    print           reduce using rule 44 (Termo -> Termo % Fator .)
    id              reduce using rule 44 (Termo -> Termo % Fator .)
    read            reduce using rule 44 (Termo -> Termo % Fator .)
    if              reduce using rule 44 (Termo -> Termo % Fator .)
    repeat          reduce using rule 44 (Termo -> Termo % Fator .)
    END             reduce using rule 44 (Termo -> Termo % Fator .)
    }               reduce using rule 44 (Termo -> Termo % Fator .)
    else            reduce using rule 44 (Termo -> Termo % Fator .)
    )               reduce using rule 44 (Termo -> Termo % Fator .)
    ]               reduce using rule 44 (Termo -> Termo % Fator .)
    =               reduce using rule 44 (Termo -> Termo % Fator .)
    !               reduce using rule 44 (Termo -> Termo % Fator .)
    >               reduce using rule 44 (Termo -> Termo % Fator .)
    <               reduce using rule 44 (Termo -> Termo % Fator .)


state 60

    (46) Fator -> ( Exp ) .

    *               reduce using rule 46 (Fator -> ( Exp ) .)
    /               reduce using rule 46 (Fator -> ( Exp ) .)
    %               reduce using rule 46 (Fator -> ( Exp ) .)
    +               reduce using rule 46 (Fator -> ( Exp ) .)
    -               reduce using rule 46 (Fator -> ( Exp ) .)
    print           reduce using rule 46 (Fator -> ( Exp ) .)
    id              reduce using rule 46 (Fator -> ( Exp ) .)
    read            reduce using rule 46 (Fator -> ( Exp ) .)
    if              reduce using rule 46 (Fator -> ( Exp ) .)
    repeat          reduce using rule 46 (Fator -> ( Exp ) .)
    END             reduce using rule 46 (Fator -> ( Exp ) .)
    }               reduce using rule 46 (Fator -> ( Exp ) .)
    else            reduce using rule 46 (Fator -> ( Exp ) .)
    )               reduce using rule 46 (Fator -> ( Exp ) .)
    ]               reduce using rule 46 (Fator -> ( Exp ) .)
    =               reduce using rule 46 (Fator -> ( Exp ) .)
    !               reduce using rule 46 (Fator -> ( Exp ) .)
    >               reduce using rule 46 (Fator -> ( Exp ) .)
    <               reduce using rule 46 (Fator -> ( Exp ) .)


state 61

    (49) Fator -> id [ Exp . ]
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    ]               shift and go to state 72
    +               shift and go to state 39
    -               shift and go to state 40


state 62

    (19) Instrucao -> id [ Exp ] . = Exp

    =               shift and go to state 73


state 63

    (22) Instrucao -> read id [ Exp . ]
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    ]               shift and go to state 74
    +               shift and go to state 39
    -               shift and go to state 40


state 64

    (23) Instrucao -> if ( Cond ) . Then Else
    (24) Instrucao -> if ( Cond ) . Then
    (25) Then -> . { Instrucoes }
    (26) Then -> . Instrucao
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    {               shift and go to state 76
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Then                           shift and go to state 75
    Instrucao                      shift and go to state 77

state 65

    (29) Cond -> Exp Oper . Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 78
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 66

    (30) Oper -> = . =

    =               shift and go to state 79


state 67

    (31) Oper -> ! . =

    =               shift and go to state 80


state 68

    (32) Oper -> > .
    (34) Oper -> > . =

    (               reduce using rule 32 (Oper -> > .)
    num             reduce using rule 32 (Oper -> > .)
    id              reduce using rule 32 (Oper -> > .)
    =               shift and go to state 81


state 69

    (33) Oper -> < .
    (35) Oper -> < . =

    (               reduce using rule 33 (Oper -> < .)
    num             reduce using rule 33 (Oper -> < .)
    id              reduce using rule 33 (Oper -> < .)
    =               shift and go to state 82


state 70

    (36) Instrucao -> repeat ( num ) . CorpoRepeat
    (37) CorpoRepeat -> . Instrucao
    (38) CorpoRepeat -> . { Instrucoes }
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    {               shift and go to state 85
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    CorpoRepeat                    shift and go to state 83
    Instrucao                      shift and go to state 84

state 71

    (12) DeclInt -> id [ num ] .

    ,               reduce using rule 12 (DeclInt -> id [ num ] .)
    int             reduce using rule 12 (DeclInt -> id [ num ] .)
    ENDVARS         reduce using rule 12 (DeclInt -> id [ num ] .)


state 72

    (49) Fator -> id [ Exp ] .

    *               reduce using rule 49 (Fator -> id [ Exp ] .)
    /               reduce using rule 49 (Fator -> id [ Exp ] .)
    %               reduce using rule 49 (Fator -> id [ Exp ] .)
    +               reduce using rule 49 (Fator -> id [ Exp ] .)
    -               reduce using rule 49 (Fator -> id [ Exp ] .)
    print           reduce using rule 49 (Fator -> id [ Exp ] .)
    id              reduce using rule 49 (Fator -> id [ Exp ] .)
    read            reduce using rule 49 (Fator -> id [ Exp ] .)
    if              reduce using rule 49 (Fator -> id [ Exp ] .)
    repeat          reduce using rule 49 (Fator -> id [ Exp ] .)
    END             reduce using rule 49 (Fator -> id [ Exp ] .)
    }               reduce using rule 49 (Fator -> id [ Exp ] .)
    else            reduce using rule 49 (Fator -> id [ Exp ] .)
    )               reduce using rule 49 (Fator -> id [ Exp ] .)
    ]               reduce using rule 49 (Fator -> id [ Exp ] .)
    =               reduce using rule 49 (Fator -> id [ Exp ] .)
    !               reduce using rule 49 (Fator -> id [ Exp ] .)
    >               reduce using rule 49 (Fator -> id [ Exp ] .)
    <               reduce using rule 49 (Fator -> id [ Exp ] .)


state 73

    (19) Instrucao -> id [ Exp ] = . Exp
    (39) Exp -> . Exp + Termo
    (40) Exp -> . Exp - Termo
    (41) Exp -> . Termo
    (42) Termo -> . Termo * Fator
    (43) Termo -> . Termo / Fator
    (44) Termo -> . Termo % Fator
    (45) Termo -> . Fator
    (46) Fator -> . ( Exp )
    (47) Fator -> . num
    (48) Fator -> . id
    (49) Fator -> . id [ Exp ]

    (               shift and go to state 27
    num             shift and go to state 28
    id              shift and go to state 29

    Exp                            shift and go to state 86
    Termo                          shift and go to state 25
    Fator                          shift and go to state 26

state 74

    (22) Instrucao -> read id [ Exp ] .

    print           reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    id              reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    read            reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    if              reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    repeat          reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    END             reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    }               reduce using rule 22 (Instrucao -> read id [ Exp ] .)
    else            reduce using rule 22 (Instrucao -> read id [ Exp ] .)


state 75

    (23) Instrucao -> if ( Cond ) Then . Else
    (24) Instrucao -> if ( Cond ) Then .
    (27) Else -> . else { Instrucoes }
    (28) Else -> . else Instrucao

  ! shift/reduce conflict for else resolved as shift
    print           reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    id              reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    read            reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    if              reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    repeat          reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    END             reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    }               reduce using rule 24 (Instrucao -> if ( Cond ) Then .)
    else            shift and go to state 88

  ! else            [ reduce using rule 24 (Instrucao -> if ( Cond ) Then .) ]

    Else                           shift and go to state 87

state 76

    (25) Then -> { . Instrucoes }
    (14) Instrucoes -> . Instrucao Instrucoes
    (15) Instrucoes -> .
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    }               reduce using rule 15 (Instrucoes -> .)
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucoes                     shift and go to state 89
    Instrucao                      shift and go to state 10

state 77

    (26) Then -> Instrucao .

    else            reduce using rule 26 (Then -> Instrucao .)
    print           reduce using rule 26 (Then -> Instrucao .)
    id              reduce using rule 26 (Then -> Instrucao .)
    read            reduce using rule 26 (Then -> Instrucao .)
    if              reduce using rule 26 (Then -> Instrucao .)
    repeat          reduce using rule 26 (Then -> Instrucao .)
    END             reduce using rule 26 (Then -> Instrucao .)
    }               reduce using rule 26 (Then -> Instrucao .)


state 78

    (29) Cond -> Exp Oper Exp .
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    )               reduce using rule 29 (Cond -> Exp Oper Exp .)
    +               shift and go to state 39
    -               shift and go to state 40


state 79

    (30) Oper -> = = .

    (               reduce using rule 30 (Oper -> = = .)
    num             reduce using rule 30 (Oper -> = = .)
    id              reduce using rule 30 (Oper -> = = .)


state 80

    (31) Oper -> ! = .

    (               reduce using rule 31 (Oper -> ! = .)
    num             reduce using rule 31 (Oper -> ! = .)
    id              reduce using rule 31 (Oper -> ! = .)


state 81

    (34) Oper -> > = .

    (               reduce using rule 34 (Oper -> > = .)
    num             reduce using rule 34 (Oper -> > = .)
    id              reduce using rule 34 (Oper -> > = .)


state 82

    (35) Oper -> < = .

    (               reduce using rule 35 (Oper -> < = .)
    num             reduce using rule 35 (Oper -> < = .)
    id              reduce using rule 35 (Oper -> < = .)


state 83

    (36) Instrucao -> repeat ( num ) CorpoRepeat .

    print           reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    id              reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    read            reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    if              reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    repeat          reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    END             reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    }               reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)
    else            reduce using rule 36 (Instrucao -> repeat ( num ) CorpoRepeat .)


state 84

    (37) CorpoRepeat -> Instrucao .

    else            reduce using rule 37 (CorpoRepeat -> Instrucao .)
    print           reduce using rule 37 (CorpoRepeat -> Instrucao .)
    id              reduce using rule 37 (CorpoRepeat -> Instrucao .)
    read            reduce using rule 37 (CorpoRepeat -> Instrucao .)
    if              reduce using rule 37 (CorpoRepeat -> Instrucao .)
    repeat          reduce using rule 37 (CorpoRepeat -> Instrucao .)
    END             reduce using rule 37 (CorpoRepeat -> Instrucao .)
    }               reduce using rule 37 (CorpoRepeat -> Instrucao .)


state 85

    (38) CorpoRepeat -> { . Instrucoes }
    (14) Instrucoes -> . Instrucao Instrucoes
    (15) Instrucoes -> .
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    }               reduce using rule 15 (Instrucoes -> .)
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucoes                     shift and go to state 90
    Instrucao                      shift and go to state 10

state 86

    (19) Instrucao -> id [ Exp ] = Exp .
    (39) Exp -> Exp . + Termo
    (40) Exp -> Exp . - Termo

    print           reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    id              reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    read            reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    if              reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    repeat          reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    END             reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    }               reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    else            reduce using rule 19 (Instrucao -> id [ Exp ] = Exp .)
    +               shift and go to state 39
    -               shift and go to state 40


state 87

    (23) Instrucao -> if ( Cond ) Then Else .

    print           reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    id              reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    read            reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    if              reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    repeat          reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    END             reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    }               reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)
    else            reduce using rule 23 (Instrucao -> if ( Cond ) Then Else .)


state 88

    (27) Else -> else . { Instrucoes }
    (28) Else -> else . Instrucao
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    {               shift and go to state 91
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucao                      shift and go to state 92

state 89

    (25) Then -> { Instrucoes . }

    }               shift and go to state 93


state 90

    (38) CorpoRepeat -> { Instrucoes . }

    }               shift and go to state 94


state 91

    (27) Else -> else { . Instrucoes }
    (14) Instrucoes -> . Instrucao Instrucoes
    (15) Instrucoes -> .
    (16) Instrucao -> . print str
    (17) Instrucao -> . print Exp
    (18) Instrucao -> . id = Exp
    (19) Instrucao -> . id [ Exp ] = Exp
    (20) Instrucao -> . read
    (21) Instrucao -> . read id
    (22) Instrucao -> . read id [ Exp ]
    (23) Instrucao -> . if ( Cond ) Then Else
    (24) Instrucao -> . if ( Cond ) Then
    (36) Instrucao -> . repeat ( num ) CorpoRepeat

    }               reduce using rule 15 (Instrucoes -> .)
    print           shift and go to state 11
    id              shift and go to state 12
    read            shift and go to state 13
    if              shift and go to state 14
    repeat          shift and go to state 15

    Instrucoes                     shift and go to state 95
    Instrucao                      shift and go to state 10

state 92

    (28) Else -> else Instrucao .

    else            reduce using rule 28 (Else -> else Instrucao .)
    print           reduce using rule 28 (Else -> else Instrucao .)
    id              reduce using rule 28 (Else -> else Instrucao .)
    read            reduce using rule 28 (Else -> else Instrucao .)
    if              reduce using rule 28 (Else -> else Instrucao .)
    repeat          reduce using rule 28 (Else -> else Instrucao .)
    END             reduce using rule 28 (Else -> else Instrucao .)
    }               reduce using rule 28 (Else -> else Instrucao .)


state 93

    (25) Then -> { Instrucoes } .

    else            reduce using rule 25 (Then -> { Instrucoes } .)
    print           reduce using rule 25 (Then -> { Instrucoes } .)
    id              reduce using rule 25 (Then -> { Instrucoes } .)
    read            reduce using rule 25 (Then -> { Instrucoes } .)
    if              reduce using rule 25 (Then -> { Instrucoes } .)
    repeat          reduce using rule 25 (Then -> { Instrucoes } .)
    END             reduce using rule 25 (Then -> { Instrucoes } .)
    }               reduce using rule 25 (Then -> { Instrucoes } .)


state 94

    (38) CorpoRepeat -> { Instrucoes } .

    else            reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    print           reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    id              reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    read            reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    if              reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    repeat          reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    END             reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)
    }               reduce using rule 38 (CorpoRepeat -> { Instrucoes } .)


state 95

    (27) Else -> else { Instrucoes . }

    }               shift and go to state 96


state 96

    (27) Else -> else { Instrucoes } .

    else            reduce using rule 27 (Else -> else { Instrucoes } .)
    print           reduce using rule 27 (Else -> else { Instrucoes } .)
    id              reduce using rule 27 (Else -> else { Instrucoes } .)
    read            reduce using rule 27 (Else -> else { Instrucoes } .)
    if              reduce using rule 27 (Else -> else { Instrucoes } .)
    repeat          reduce using rule 27 (Else -> else { Instrucoes } .)
    END             reduce using rule 27 (Else -> else { Instrucoes } .)
    }               reduce using rule 27 (Else -> else { Instrucoes } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for id in state 13 resolved as shift
WARNING: shift/reduce conflict for else in state 75 resolved as shift
